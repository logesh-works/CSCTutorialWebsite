"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[95711],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var l=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,l,i=function(e,t){if(null==e)return{};var n,l,i={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var r=l.createContext({}),p=function(e){var t=l.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return l.createElement(r.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},h=l.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,r=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=p(n),h=i,k=m["".concat(r,".").concat(h)]||m[h]||c[h]||a;return n?l.createElement(k,o(o({ref:t},d),{},{components:n})):l.createElement(k,o({ref:t},d))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=h;var s={};for(var r in t)hasOwnProperty.call(t,r)&&(s[r]=t[r]);s.originalType=e,s[m]="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}h.displayName="MDXCreateElement"},89802:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var l=n(87462),i=(n(67294),n(3905)),a=n(39005);const o={slug:"/css-display",id:"css-display",sidebar_label:"CSS Display",title:"CSS Display",description:"Learn CSS display to control how elements are displayed. Our interactive tutorial covers all the essentials, including block, inline, inline-block, flexbox, and grid. You'll also learn how to hide elements with CSS.",keywords:["CSS display","Display property in CSS","CSS display values","Block display in CSS","Inline display in CSS","Inline-block display in CSS","Flexbox display in CSS","Grid display in CSS","CSS display none","CSS display inline-block","CSS display inline-flex","web development","CSC","interactive tutorial","CSS code","CSS layout"],image:"https://cscnotes.netlify.app/img/css-large.png"},s=void 0,r={unversionedId:"CSS Tutorial/CSS Display/css-display",id:"CSS Tutorial/CSS Display/css-display",title:"CSS Display",description:"Learn CSS display to control how elements are displayed. Our interactive tutorial covers all the essentials, including block, inline, inline-block, flexbox, and grid. You'll also learn how to hide elements with CSS.",source:"@site/docs/tutorial-css/02-CSS Tutorial/38-CSS Display/index.mdx",sourceDirName:"02-CSS Tutorial/38-CSS Display",slug:"/css-display",permalink:"/css/css-display",draft:!1,tags:[],version:"current",frontMatter:{slug:"/css-display",id:"css-display",sidebar_label:"CSS Display",title:"CSS Display",description:"Learn CSS display to control how elements are displayed. Our interactive tutorial covers all the essentials, including block, inline, inline-block, flexbox, and grid. You'll also learn how to hide elements with CSS.",keywords:["CSS display","Display property in CSS","CSS display values","Block display in CSS","Inline display in CSS","Inline-block display in CSS","Flexbox display in CSS","Grid display in CSS","CSS display none","CSS display inline-block","CSS display inline-flex","web development","CSC","interactive tutorial","CSS code","CSS layout"],image:"https://cscnotes.netlify.app/img/css-large.png"},sidebar:"ethernetip",previous:{title:"CSS Tables",permalink:"/css/css-tables"},next:{title:"CSS Max-width",permalink:"/css/css-max-width"}},p={},d=[{value:"Display Block",id:"display-block",level:3},{value:"Display Inline",id:"display-inline",level:3},{value:"Display Inline-Block",id:"display-inline-block",level:3},{value:"Display None",id:"display-none",level:3},{value:"Display flex",id:"display-flex",level:3},{value:"Display Grid",id:"display-grid",level:3},{value:"Display None vs Visiblity Hidden",id:"display-none-vs-visiblity-hidden",level:3}],m={toc:d};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,l.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("head",null,(0,i.kt)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,i.kt)("meta",{name:"twitter:site",content:"@CSC"}),(0,i.kt)("meta",{name:"twitter:title",content:"CSS Display"}),(0,i.kt)("meta",{name:"twitter:description",content:"Learn about CSS Display using our interactive Code Editor."}),(0,i.kt)("meta",{name:"twitter:image",content:"https://cscnotes.netlify.app/img/css-large.png"}),(0,i.kt)("meta",{name:"twitter:image:alt",content:"CSS Tutorial Banner Image"}),(0,i.kt)("meta",{name:"og:type",content:"article"}),(0,i.kt)("meta",{name:"og:title",content:"CSS Display"}),(0,i.kt)("meta",{name:"og:description",content:"Learn about CSS Display using our interactive Code Editor."}),(0,i.kt)("meta",{name:"og:image",content:"https://cscnotes.netlify.app/img/css-large.png"}),(0,i.kt)("meta",{name:"og:image:alt",content:"CSS Tutorial Banner Image"}),(0,i.kt)("meta",{name:"og:site_name",content:"CSC"}),(0,i.kt)("meta",{name:"og:url",content:"https://cscnotes.netlify.app/css/css-display"}),(0,i.kt)("link",{rel:"canonical",href:"https://cscnotes.netlify.app/css/css-display"})),(0,i.kt)("p",null,"CSS display property is used to ",(0,i.kt)("strong",{parentName:"p"},"set how an HTML element should be displayed"),". It determines the type of box model used for the element and how it interacts with other elements on the page."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"The display property can have several values, such as:")),(0,i.kt)("h3",{id:"display-block"},"Display Block"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"display:block")," property is used to ",(0,i.kt)("strong",{parentName:"p"},"display an element as a block-level box"),", which means it ",(0,i.kt)("strong",{parentName:"p"},"takes up the full width of its parent container")," and ",(0,i.kt)("strong",{parentName:"p"},"starts on a new line"),". "),(0,i.kt)("p",null,"It is commonly used for headings, paragraphs, and other elements that need to be displayed as block-level boxes."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"As an example:")),(0,i.kt)(a.Z,{htmlCode:"<!DOCTYPE html>\n<html>\n  <head>\n    <title>Display Block Example</title>\n    <style>\n      span {\n        display: block;\n        background-color: yellow;\n        border: 1px solid black;\n        padding: 10px;\n        margin-bottom: 10px;\n      }\n    </style>\n  </head>\n  <body>\n    <h1>Display Block Example</h1>\n    <p>\n      This is a demonstration of how the <code>display:block</code> property\n      works in CSS.\n    </p>\n    <span>This is a block-level element</span>\n    <span>This is another block-level element</span>\n    <span>And another one</span>\n  </body>\n</html>\n",elementId:"sku-example1",mdxType:"CustomEditorHTML"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"In this example:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"We have an ",(0,i.kt)("inlineCode",{parentName:"li"},"h1")," element and a ",(0,i.kt)("inlineCode",{parentName:"li"},"p")," element that are both displayed as block-level elements by default."),(0,i.kt)("li",{parentName:"ul"},"We've also added three ",(0,i.kt)("inlineCode",{parentName:"li"},"span")," elements that we want to display as block-level elements using the ",(0,i.kt)("inlineCode",{parentName:"li"},"display: block")," property."),(0,i.kt)("li",{parentName:"ul"},"In the CSS, we've set the ",(0,i.kt)("inlineCode",{parentName:"li"},"display: block")," property for the ",(0,i.kt)("inlineCode",{parentName:"li"},"span")," elements and also added some other styles to give them a yellow background color, black border, and some padding and margin.")),(0,i.kt)("h3",{id:"display-inline"},"Display Inline"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"display:inline")," property is used to ",(0,i.kt)("strong",{parentName:"p"},"display an element as an inline-level box"),", which means it ",(0,i.kt)("strong",{parentName:"p"},"does not take up the full width of its parent container")," and ",(0,i.kt)("strong",{parentName:"p"},"does not start on a new line"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"As an example:")),(0,i.kt)(a.Z,{htmlCode:"<!DOCTYPE html>\n<html>\n  <head>\n    <title>Display Inline Example</title>\n    <style>\n      span {\n        display: inline;\n        background-color: yellow;\n        border: 1px solid black;\n        padding: 10px;\n        margin-right: 10px;\n      }\n    </style>\n  </head>\n  <body>\n    <h1>Display Inline Example</h1>\n    <p>\n      This is a demonstration of how the <code>display:inline</code> property\n      works in CSS.\n    </p>\n    <span>This is an inline element</span><span>so is this one</span\n    ><span>and this one</span>\n  </body>\n</html>\n",elementId:"sku-example2",mdxType:"CustomEditorHTML"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"In this example:")," "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"We have an ",(0,i.kt)("inlineCode",{parentName:"li"},"h1")," element and a ",(0,i.kt)("inlineCode",{parentName:"li"},"p")," element that are both displayed as\n",(0,i.kt)("inlineCode",{parentName:"li"},"block-level")," elements by default."),(0,i.kt)("li",{parentName:"ul"},"We've also added three ",(0,i.kt)("inlineCode",{parentName:"li"},"span")," elements that we want\nto display as inline-level elements using the ",(0,i.kt)("inlineCode",{parentName:"li"},"display: inline")," property."),(0,i.kt)("li",{parentName:"ul"},"In the CSS, we've set the ",(0,i.kt)("inlineCode",{parentName:"li"},"display: inline")," property for the ",(0,i.kt)("inlineCode",{parentName:"li"},"span")," elements and also added some other styles to give them a yellow background color, black border, and some padding and margin."),(0,i.kt)("li",{parentName:"ul"},"We've set the ",(0,i.kt)("inlineCode",{parentName:"li"},"margin-right")," property to 10 pixels to add some space between the ",(0,i.kt)("inlineCode",{parentName:"li"},"span")," elements.")),(0,i.kt)("h3",{id:"display-inline-block"},"Display Inline-Block"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"display:inline-block")," property is useful for ",(0,i.kt)("strong",{parentName:"p"},"displaying elements as inline-level boxes that can also have a width and height"),". "),(0,i.kt)("p",null,"Helpful for creating navigation menus or other components that need to be displayed as inline-level boxes but also have a width and height."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"As an example:")),(0,i.kt)(a.Z,{htmlCode:"<!DOCTYPE html>\n<html>\n  <head>\n    <title>Display Inline-Block Example</title>\n    <style>\n      span {\n        display: inline-block;\n        background-color: yellow;\n        border: 1px solid black;\n        padding: 10px;\n        margin-right: 10px;\n      }\n    </style>\n  </head>\n  <body>\n    <h1>Display Inline-Block Example</h1>\n    <p>\n      This is a demonstration of how the\n      <code>display:inline-block</code> property works in CSS.\n    </p>\n    <span>This is an inline-block element</span><span>so is this one</span\n    ><span>and this one</span>\n  </body>\n</html>\n",elementId:"sku-example3",mdxType:"CustomEditorHTML"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"In this example:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"We have an ",(0,i.kt)("inlineCode",{parentName:"li"},"h1")," element and a ",(0,i.kt)("inlineCode",{parentName:"li"},"p")," element that are both displayed as block-level elements by default."),(0,i.kt)("li",{parentName:"ul"},"We've also added three ",(0,i.kt)("inlineCode",{parentName:"li"},"span")," elements that we want to display as ",(0,i.kt)("inlineCode",{parentName:"li"},"inline-block-level")," elements using the display: inline-block property."),(0,i.kt)("li",{parentName:"ul"},"In the CSS, we've set the ",(0,i.kt)("inlineCode",{parentName:"li"},"display: inline-block")," property for the ",(0,i.kt)("inlineCode",{parentName:"li"},"span")," elements and also added some other styles to give them a yellow background color, black border, and some padding and margin."),(0,i.kt)("li",{parentName:"ul"},"We've set the ",(0,i.kt)("inlineCode",{parentName:"li"},"margin-right")," property to ",(0,i.kt)("inlineCode",{parentName:"li"},"10")," pixels to add some space between the ",(0,i.kt)("inlineCode",{parentName:"li"},"span")," elements.")),(0,i.kt)("h3",{id:"display-none"},"Display None"),(0,i.kt)("p",null,"When the ",(0,i.kt)("inlineCode",{parentName:"p"},"display:none")," property is used, the element is ",(0,i.kt)("strong",{parentName:"p"},"completely removed from the document flow")," and ",(0,i.kt)("strong",{parentName:"p"},"cannot be seen or interacted with"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"As an example:")),(0,i.kt)(a.Z,{htmlCode:'<!DOCTYPE html>\n<html>\n<head>\n\t<title>Display None Example using JavaScript</title>\n\t<style>\n\t\t.hidden {\n\t\t\tbackground-color: yellow;\n\t\t\tpadding: 10px;\n\t\t\tborder: 1px solid black;\n\t\t}\n\t</style>\n</head>\n<body>\n\t<h1>Display None Example using JavaScript</h1>\n\t<p>This is a demonstration of how to use JavaScript to apply the <code>display:none</code> property to an HTML element.</p>\n\t<div id="hideMe" class="hidden">\n\t\tThis content will be hidden from view\n\t</div>\n\t<p>\n\t\t<button onclick="hideContent()">Click me to hide the content!</button>\n\t</p>\n</body>\n<script>\n\tfunction hideContent() {\n\t\tvar element = document.getElementById("hideMe");\n\t\telement.style.display = "none";\n\t}\n<\/script>\n</html>\n',elementId:"sku-example4",mdxType:"CustomEditorHTML"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"In this example:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"We have an ",(0,i.kt)("inlineCode",{parentName:"li"},"h1")," element and a ",(0,i.kt)("inlineCode",{parentName:"li"},"p")," element that are both displayed as block-level elements by default."),(0,i.kt)("li",{parentName:"ul"},"We've also added a ",(0,i.kt)("inlineCode",{parentName:"li"},"div")," element with an ID of ",(0,i.kt)("inlineCode",{parentName:"li"},'"hideMe"')," that we want to hide using JavaScript when the user clicks a button."),(0,i.kt)("li",{parentName:"ul"},"We've also added a button that will call the ",(0,i.kt)("inlineCode",{parentName:"li"},"hideContent()")," function when clicked."),(0,i.kt)("li",{parentName:"ul"},"In the CSS, we've set some styles for the ",(0,i.kt)("inlineCode",{parentName:"li"},"div")," element with the ",(0,i.kt)("inlineCode",{parentName:"li"},'"hidden"')," class to give it a yellow background color, black border, and some padding."),(0,i.kt)("li",{parentName:"ul"},"In the JavaScript, we've defined a ",(0,i.kt)("inlineCode",{parentName:"li"},"hideContent()")," function that retrieves the div element with the ID of ",(0,i.kt)("inlineCode",{parentName:"li"},'"hideMe"')," using the ",(0,i.kt)("inlineCode",{parentName:"li"},"document.getElementById()")," method."),(0,i.kt)("li",{parentName:"ul"},"We then set the ",(0,i.kt)("inlineCode",{parentName:"li"},"style.display")," property of this element to ",(0,i.kt)("strong",{parentName:"li"},'"none"'),", which will apply the ",(0,i.kt)("inlineCode",{parentName:"li"},"display:none")," property and hide the div element and its contents from view.")),(0,i.kt)("h3",{id:"display-flex"},"Display flex"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"display:flex")," property is used to ",(0,i.kt)("strong",{parentName:"p"},"display an element as a flex container"),", which means it ",(0,i.kt)("strong",{parentName:"p"},"can be used to create flexible layouts with rows and columns"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"As an example:")),(0,i.kt)(a.Z,{htmlCode:'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Display Flex Example</title>\n    <style>\n      .container {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n        background-color: lightblue;\n        padding: 20px;\n      }\n\n      .box {\n        background-color: pink;\n        color: white;\n        padding: 20px;\n        margin: 10px;\n        flex-basis: 30%;\n      }\n    </style>\n  </head>\n  <body>\n    <h1>Display Flex Example</h1>\n    <p>\n      This is a demonstration of how the <code>display:flex</code> property\n      works in CSS.\n    </p>\n    <div class="container">\n      <div class="box">Box 1</div>\n      <div class="box">Box 2</div>\n      <div class="box">Box 3</div>\n    </div>\n  </body>\n</html>\n',elementId:"sku-example5",mdxType:"CustomEditorHTML"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"In this example:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"we have an ",(0,i.kt)("inlineCode",{parentName:"li"},"h1")," element and a ",(0,i.kt)("inlineCode",{parentName:"li"},"p")," element that are both displayed as block-level elements by default."),(0,i.kt)("li",{parentName:"ul"},"We've also added a ",(0,i.kt)("inlineCode",{parentName:"li"},"div")," element with a class of ",(0,i.kt)("inlineCode",{parentName:"li"},'"container"')," that we want to display using the ",(0,i.kt)("inlineCode",{parentName:"li"},"display:flex")," property."),(0,i.kt)("li",{parentName:"ul"},"In the CSS, we've set the ",(0,i.kt)("inlineCode",{parentName:"li"},"display:flex")," property for the ",(0,i.kt)("inlineCode",{parentName:"li"},"div"),' element with a class of "container". This will turn the ',(0,i.kt)("inlineCode",{parentName:"li"},"div")," element into a flex container, which means that its child elements can be flex items."),(0,i.kt)("li",{parentName:"ul"},"We've also set some additional flex properties for the container, including ",(0,i.kt)("inlineCode",{parentName:"li"},"flex-direction: row")," to display the flex items in a row, ",(0,i.kt)("inlineCode",{parentName:"li"},"justify-content: space-between")," to distribute the flex items evenly along the main axis with space between them, and ",(0,i.kt)("inlineCode",{parentName:"li"},"align-items: center")," to align the flex items along the cross axis."),(0,i.kt)("li",{parentName:"ul"},"We've also defined a ",(0,i.kt)("inlineCode",{parentName:"li"},"box")," class for the child elements of the container."),(0,i.kt)("li",{parentName:"ul"},"This class sets some basic styles for the flex items, including a pink background color, white text color, ",(0,i.kt)("inlineCode",{parentName:"li"},"20")," pixels of padding, and 10 pixels of margin."),(0,i.kt)("li",{parentName:"ul"},"We've also set ",(0,i.kt)("inlineCode",{parentName:"li"},"flex-basis: 30%")," to give each flex item a basis size of ",(0,i.kt)("inlineCode",{parentName:"li"},"30%")," of the container's width.")),(0,i.kt)("h3",{id:"display-grid"},"Display Grid"),(0,i.kt)("p",null,"The element is ",(0,i.kt)("strong",{parentName:"p"},"displayed as a grid container"),", which means it can be ",(0,i.kt)("strong",{parentName:"p"},"used to create complex layouts with rows and columns"),". It is commonly used for page layouts and forms."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"As an example:")),(0,i.kt)(a.Z,{htmlCode:'<!DOCTYPE html>\n<html>\n<head>\n\t<title>Display Grid Example</title>\n\t<style>\n\t\t.container {\n\t\t\tdisplay: grid;\n\t\t\tgrid-template-columns: repeat(3, 1fr);\n\t\t\tgrid-gap: 20px;\n\t\t\tbackground-color: lightblue;\n\t\t\tpadding: 20px;\n\t\t}\n\n\t\t.box {\n\t\t\tbackground-color: pink;\n\t\t\tcolor: white;\n\t\t\tpadding: 20px;\n\t\t\tmargin: 10px;\n\t\t\ttext-align: center;\n\t\t\tfont-size: 24px;\n\t\t}\n\t</style>\n</head>\n<body>\n\t<h1>Display Grid Example</h1>\n\t<p>This is a demonstration of how the <code>display:grid</code> property works in CSS.</p>\n\t<div class="container">\n\t\t<div class="box">Box 1</div>\n\t\t<div class="box">Box 2</div>\n\t\t<div class="box">Box 3</div>\n\t\t<div class="box">Box 4</div>\n\t\t<div class="box">Box 5</div>\n\t\t<div class="box">Box 6</div>\n\t</div>\n</body>\n</html>\n',elementId:"sku-example6",mdxType:"CustomEditorHTML"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"In this example:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"We have an ",(0,i.kt)("inlineCode",{parentName:"li"},"h1")," element and a ",(0,i.kt)("inlineCode",{parentName:"li"},"p")," element that are both displayed as block-level elements by default."),(0,i.kt)("li",{parentName:"ul"},"We've also added a ",(0,i.kt)("inlineCode",{parentName:"li"},"div")," element with a class of ",(0,i.kt)("inlineCode",{parentName:"li"},'"container"')," that we want to display using the ",(0,i.kt)("inlineCode",{parentName:"li"},"display:grid")," property."),(0,i.kt)("li",{parentName:"ul"},"In the CSS, we've set the ",(0,i.kt)("inlineCode",{parentName:"li"},"display:grid")," property for the ",(0,i.kt)("inlineCode",{parentName:"li"},"div")," element with a class of ",(0,i.kt)("inlineCode",{parentName:"li"},'"container"'),"."),(0,i.kt)("li",{parentName:"ul"},"This will turn the ",(0,i.kt)("inlineCode",{parentName:"li"},"div")," element into a grid container, which means that its child elements can be grid items."),(0,i.kt)("li",{parentName:"ul"},"We've also set some additional grid properties for the container, including ",(0,i.kt)("inlineCode",{parentName:"li"},"grid-template-columns: repeat(3, 1fr)")," to define a grid with three columns of equal width, and ",(0,i.kt)("inlineCode",{parentName:"li"},"grid-gap: 20px")," to add a 20-pixel gap between grid items."),(0,i.kt)("li",{parentName:"ul"},"We've also defined a ",(0,i.kt)("inlineCode",{parentName:"li"},"box")," class for the child elements of the container."),(0,i.kt)("li",{parentName:"ul"},"This class sets some basic styles for the grid items, including a pink background color, white text color, ",(0,i.kt)("inlineCode",{parentName:"li"},"20")," pixels of padding, and ",(0,i.kt)("inlineCode",{parentName:"li"},"10")," pixels of margin."),(0,i.kt)("li",{parentName:"ul"},"We've also set ",(0,i.kt)("inlineCode",{parentName:"li"},"text-align: center")," to center the text inside each grid item, and ",(0,i.kt)("inlineCode",{parentName:"li"},"font-size: 24px")," to make the text larger.")),(0,i.kt)("h3",{id:"display-none-vs-visiblity-hidden"},"Display None vs Visiblity Hidden"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"display:none")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"visibility:hidden")," are both CSS properties used to hide elements on a webpage."),(0,i.kt)("p",null," ",(0,i.kt)("strong",{parentName:"p"},"However, they work in slightly different ways:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"display:none"))," completely removes the element from the document flow, meaning it takes up no space on the page and cannot be interacted with. Any child elements or content within the element will also be hidden. The element is effectively deleted from the page, and cannot be seen or accessed by the user.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"visibility:hidden"))," hides the element from view, but it still takes up space on the page and can be interacted with. The element is not deleted from the page, and any child elements or content within the element will still take up space. However, the element is invisible and cannot be seen by the user."))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"As an example:")),(0,i.kt)(a.Z,{htmlCode:'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Display and Visibility Example</title>\n    <style>\n      #myDiv {\n        background-color: yellow;\n        padding: 10px;\n        border: 1px solid black;\n      }\n    </style>\n  </head>\n  <body>\n    <button onclick="hideElement()">Hide Element</button>\n    <button onclick="showElement()">Show Element</button>\n\n    <div id="myDiv">Hello, world!</div>\n\n    <script>\n      // Get the element by its ID\n      var myDiv = document.getElementById("myDiv");\n\n      // Function to hide the element using display:none\n      function hideElement() {\n        myDiv.style.display = "none";\n        //     you can also use\n        // myDiv.style.visibility="hidden";\n      }\n\n      // Function to show the element again\n      function showElement() {\n        myDiv.style.display = "block";\n\n        // you can also use\n        // myDiv.style.visibility="visible";\n      }\n    <\/script>\n  </body>\n</html>\n',elementId:"sku-example7",mdxType:"CustomEditorHTML"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"In this example:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"We have a ",(0,i.kt)("inlineCode",{parentName:"li"},"div"),' element with the ID "myDiv" that contains the text "Hello, world!".'),(0,i.kt)("li",{parentName:"ul"},"There are also two buttons that call JavaScript functions when clicked: ",(0,i.kt)("inlineCode",{parentName:"li"},"hideElement()")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"showElement()"),"."),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"hideElement()")," function sets the ",(0,i.kt)("inlineCode",{parentName:"li"},"display"),' property of the myDiv element to "none", effectively hiding it from the page.'),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"showElement()")," function sets the ",(0,i.kt)("inlineCode",{parentName:"li"},"display"),' property back to "block", showing the element again.')),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"We could also use ",(0,i.kt)("inlineCode",{parentName:"p"},"visibility:hidden")," instead of ",(0,i.kt)("inlineCode",{parentName:"p"},"display:none")," to hide the element.")))}c.isMDXComponent=!0},39005:(e,t,n)=>{n.d(t,{Z:()=>c});var l=n(67294),i=n(19604);const a="label_OGF5",o="container_vJjB",s="editorWindow_Gfn9",r="outputwindow_HHdh",p="button_jrAF";var d=n(9200),m=n(36136);const c=e=>{let{htmlCode:t,elementId:n}=e;const[c,h]=(0,l.useState)(t),{colorMode:k}=(0,d.I)();let y=null;function u(){console.log("elementId=",n),document.getElementById(n).innerHTML="",document.getElementById(n).appendChild(y),y.contentDocument.open(),y.contentDocument.write(c),y.contentDocument.close(),y.style.height=y.contentWindow.document.body.scrollHeight+50+"px"}return m.Z.canUseDOM&&(y=document.createElement("iframe"),y.style.width="100%",y.style.height="100%",y.style.background="#fff"),(0,l.useEffect)((()=>{m.Z.canUseDOM&&u()}),[""]),l.createElement("div",{className:o},l.createElement("h3",{className:a},"Editor"),l.createElement(i.ZP,{className:s,height:"40vh",defaultLanguage:"html",defaultValue:c,onChange:h,theme:"dark"===k?"vs-dark":"light",options:{readOnly:!1,minimap:{enabled:!1}}}),l.createElement("div",{className:p},l.createElement("button",{onClick:u,className:"button button--success"},"Run Example >>")),l.createElement("div",{className:r,id:n}))}}}]);