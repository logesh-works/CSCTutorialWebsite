"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[52609],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>S});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,S=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return n?r.createElement(S,o(o({ref:t},c),{},{components:n})):r.createElement(S,o({ref:t},c))}));function S(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},86703:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={slug:"/css-user-interface",id:"css-user-interface",sidebar_label:"CSS User Interface",title:"Introduction to CSS User Interface",description:"Learn about CSS User Interface using our interactive Code Editor. Our CSS tutorial is developed both for beginners and professionals.",keywords:["CSS user interface","User interface design with CSS","CSS user interface components","CSS buttons","CSS forms","CSS menus","CSS tabs","CSS tooltips","CSS modals","CSS sliders","CSS checkboxes","CSS radio buttons","CSS switches","CSS dropdowns","CSS navigation bars","CSS responsive design for user interfaces","CSS Playground","CSS Code Editor","Online IDE","Online CSS Playground","Interactive IDE","CSS Semantics","CSS Validation","Colors","XML","MySQL","Icons","CSS","JavaScript","PHP","jQuery","Bootstrap","NodeJS","React","Tutorials","Programming","Web Development","Training","Learning","Quiz","Exercises","Courses","Lessons","References","Examples","Learn to code","Source code","Demos","Tips","Website"],image:"https://cscnotes.netlify.app/img/css-large.png"},o=void 0,s={unversionedId:"CSS Advanced/CSS User Interface/css-user-interface",id:"CSS Advanced/CSS User Interface/css-user-interface",title:"Introduction to CSS User Interface",description:"Learn about CSS User Interface using our interactive Code Editor. Our CSS tutorial is developed both for beginners and professionals.",source:"@site/docs/tutorial-css/04-CSS Advanced/46-CSS User Interface/index.mdx",sourceDirName:"04-CSS Advanced/46-CSS User Interface",slug:"/css-user-interface",permalink:"/css/css-user-interface",draft:!1,tags:[],version:"current",frontMatter:{slug:"/css-user-interface",id:"css-user-interface",sidebar_label:"CSS User Interface",title:"Introduction to CSS User Interface",description:"Learn about CSS User Interface using our interactive Code Editor. Our CSS tutorial is developed both for beginners and professionals.",keywords:["CSS user interface","User interface design with CSS","CSS user interface components","CSS buttons","CSS forms","CSS menus","CSS tabs","CSS tooltips","CSS modals","CSS sliders","CSS checkboxes","CSS radio buttons","CSS switches","CSS dropdowns","CSS navigation bars","CSS responsive design for user interfaces","CSS Playground","CSS Code Editor","Online IDE","Online CSS Playground","Interactive IDE","CSS Semantics","CSS Validation","Colors","XML","MySQL","Icons","CSS","JavaScript","PHP","jQuery","Bootstrap","NodeJS","React","Tutorials","Programming","Web Development","Training","Learning","Quiz","Exercises","Courses","Lessons","References","Examples","Learn to code","Source code","Demos","Tips","Website"],image:"https://cscnotes.netlify.app/img/css-large.png"},sidebar:"ethernetip",previous:{title:"CSS Multiple Columns",permalink:"/css/css-multiple-columns"},next:{title:"CSS Variables",permalink:"/css/css-variables"}},l={},p=[{value:"CSS User Interface",id:"css-user-interface",level:2},{value:"The <code>resize</code> property",id:"the-resize-property",level:3},{value:"The <code>outline-offset</code> property",id:"the-outline-offset-property",level:3}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("head",null,(0,a.kt)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,a.kt)("meta",{name:"twitter:site",content:"@CSC"}),(0,a.kt)("meta",{name:"twitter:title",content:"Introduction to CSS User Interface"}),(0,a.kt)("meta",{name:"twitter:description",content:"Learn about CSS User Interface using our interactive Code Editor."}),(0,a.kt)("meta",{name:"twitter:image",content:"https://cscnotes.netlify.app/img/css-large.png"}),(0,a.kt)("meta",{name:"twitter:image:alt",content:"CSS Tutorial Banner Image"}),(0,a.kt)("meta",{name:"og:type",content:"article"}),(0,a.kt)("meta",{name:"og:title",content:"Introduction to CSS User Interface"}),(0,a.kt)("meta",{name:"og:description",content:"Learn about CSS User Interface using our interactive Code Editor."}),(0,a.kt)("meta",{name:"og:image",content:"https://cscnotes.netlify.app/img/css-large.png"}),(0,a.kt)("meta",{name:"og:image:alt",content:"CSS Tutorial Banner Image"}),(0,a.kt)("meta",{name:"og:site_name",content:"CSC"}),(0,a.kt)("meta",{name:"og:url",content:"https://cscnotes.netlify.app/css/css-user-interface"}),(0,a.kt)("link",{rel:"canonical",href:"https://cscnotes.netlify.app/css/css-user-interface"})),(0,a.kt)("h2",{id:"css-user-interface"},"CSS User Interface"),(0,a.kt)("p",null,"CSS (",(0,a.kt)("strong",{parentName:"p"},"Cascading Style Sheets"),") provides a wide range of properties to style the user interface of web pages."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"You will learn about the following CSS user interface properties:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"resize")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"outline-offset"))),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"resize")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"outline-offset")," are two CSS properties that can be used to modify the visual appearance and behavior of HTML elements."),(0,a.kt)("h3",{id:"the-resize-property"},"The ",(0,a.kt)("inlineCode",{parentName:"h3"},"resize")," property"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"resize")," property is ",(0,a.kt)("strong",{parentName:"p"},"used to allow users to resize an element"),", typically a ",(0,a.kt)("inlineCode",{parentName:"p"},"<textarea>")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"<input>")," element. This property specifies whether or not an element is resizable, and in which directions it can be resized. "),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"The possible values of this property are:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"none"),":")," The element cannot be resized.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"both"),":")," The element can be resized in both the horizontal and vertical directions.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"horizontal"),":")," The element can only be resized in the horizontal direction.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"vertical"),":")," The element can only be resized in the vertical direction.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"block"),":")," The element can be resized in both directions, but the resizing is constrained to maintain the aspect ratio of the element."))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"As an example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},"textarea {\n  resize: both;\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"This will allow users to resize the ",(0,a.kt)("inlineCode",{parentName:"li"},"<textarea>")," element in both the horizontal and vertical directions.")),(0,a.kt)("h3",{id:"the-outline-offset-property"},"The ",(0,a.kt)("inlineCode",{parentName:"h3"},"outline-offset")," property"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"outline-offset")," property is ",(0,a.kt)("strong",{parentName:"p"},"used to offset the outline of an element from its border"),". The outline is a non-rectangular border that is drawn around an element, typically to indicate focus. The ",(0,a.kt)("inlineCode",{parentName:"p"},"outline-offset")," property specifies the distance between the outline and the border of an element. "),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"The possible values of this property are:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"length"),":")," Specifies the offset as a length value.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"initial"),":")," Sets the offset to its default value.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"inherit"),":")," Inherits the offset from the parent element."))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"As an example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},"button:focus {\n  outline: 2px solid blue;\n  outline-offset: 10px;\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"This will draw a blue outline around a button when it is in focus, and offset the outline ",(0,a.kt)("inlineCode",{parentName:"li"},"10")," pixels away from the button's border.")))}u.isMDXComponent=!0}}]);