"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[86043],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),d=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=d(e.components);return i.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=d(n),u=r,g=p["".concat(l,".").concat(u)]||p[u]||m[u]||a;return n?i.createElement(g,s(s({ref:t},c),{},{components:n})):i.createElement(g,s({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[p]="string"==typeof e?e:r,s[1]=o;for(var d=2;d<a;d++)s[d]=n[d];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},73595:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var i=n(87462),r=(n(67294),n(3905)),a=n(39005);const s={slug:"/css-rwd-grid",id:"css-rwd-grid",sidebar_label:"RWD Grid View",title:"Introduction to Responsive Web Design - The Grid View",description:"Learn about Responsive Web Design - The Grid View using our interactive Code Editor. Our CSS tutorial is developed both for beginners and professionals.",keywords:["Grid view in responsive web design","CSS grid layout","Responsive grid system","Grid columns","Grid rows","Grid templates","Grid areas","Grid gaps","Grid auto-placement","Media queries and grid view","Responsive grid examples","CSS Playground","CSS Code Editor","Online IDE","Online CSS Playground","Interactive IDE","CSS Semantics","CSS Validation","Colors","XML","MySQL","Icons","CSS","JavaScript","PHP","jQuery","Bootstrap","NodeJS","React","Tutorials","Programming","Web Development","Training","Learning","Quiz","Exercises","Courses","Lessons","References","Examples","Learn to code","Source code","Demos","Tips","Website"],image:"https://cscnotes.netlify.app/img/css-large.png"},o=void 0,l={unversionedId:"CSS Responsive/RWD Grid View/css-rwd-grid",id:"CSS Responsive/RWD Grid View/css-rwd-grid",title:"Introduction to Responsive Web Design - The Grid View",description:"Learn about Responsive Web Design - The Grid View using our interactive Code Editor. Our CSS tutorial is developed both for beginners and professionals.",source:"@site/docs/tutorial-css/06-CSS Responsive/06-RWD Grid View/index.mdx",sourceDirName:"06-CSS Responsive/06-RWD Grid View",slug:"/css-rwd-grid",permalink:"/css/css-rwd-grid",draft:!1,tags:[],version:"current",frontMatter:{slug:"/css-rwd-grid",id:"css-rwd-grid",sidebar_label:"RWD Grid View",title:"Introduction to Responsive Web Design - The Grid View",description:"Learn about Responsive Web Design - The Grid View using our interactive Code Editor. Our CSS tutorial is developed both for beginners and professionals.",keywords:["Grid view in responsive web design","CSS grid layout","Responsive grid system","Grid columns","Grid rows","Grid templates","Grid areas","Grid gaps","Grid auto-placement","Media queries and grid view","Responsive grid examples","CSS Playground","CSS Code Editor","Online IDE","Online CSS Playground","Interactive IDE","CSS Semantics","CSS Validation","Colors","XML","MySQL","Icons","CSS","JavaScript","PHP","jQuery","Bootstrap","NodeJS","React","Tutorials","Programming","Web Development","Training","Learning","Quiz","Exercises","Courses","Lessons","References","Examples","Learn to code","Source code","Demos","Tips","Website"],image:"https://cscnotes.netlify.app/img/css-large.png"},sidebar:"ethernetip",previous:{title:"RWD Viewport",permalink:"/css/css-rwd-viewport"},next:{title:"RWD Media Queries",permalink:"/css/css-rwd-mediaqueries"}},d={},c=[{value:"What is a Grid-View ?",id:"what-is-a-grid-view-",level:2},{value:"Building a Responsive Grid-View",id:"building-a-responsive-grid-view",level:2}],p={toc:c};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("head",null,(0,r.kt)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,r.kt)("meta",{name:"twitter:site",content:"@CSC"}),(0,r.kt)("meta",{name:"twitter:title",content:"Introduction to Responsive Web Design - The Grid View"}),(0,r.kt)("meta",{name:"twitter:description",content:"Learn about Responsive Web Design - The Grid View using our interactive Code Editor."}),(0,r.kt)("meta",{name:"twitter:image",content:"https://cscnotes.netlify.app/img/css-large.png"}),(0,r.kt)("meta",{name:"twitter:image:alt",content:"CSS Tutorial Banner Image"}),(0,r.kt)("meta",{name:"og:type",content:"article"}),(0,r.kt)("meta",{name:"og:title",content:"Introduction to Responsive Web Design - The Grid View"}),(0,r.kt)("meta",{name:"og:description",content:"Learn about Responsive Web Design - The Grid View using our interactive Code Editor."}),(0,r.kt)("meta",{name:"og:image",content:"https://cscnotes.netlify.app/img/css-large.png"}),(0,r.kt)("meta",{name:"og:image:alt",content:"CSS Tutorial Banner Image"}),(0,r.kt)("meta",{name:"og:site_name",content:"CSC"}),(0,r.kt)("meta",{name:"og:url",content:"https://cscnotes.netlify.app/css/css-rwd-grid"}),(0,r.kt)("link",{rel:"canonical",href:"https://cscnotes.netlify.app/css/css-rwd-grid"})),(0,r.kt)("h2",{id:"what-is-a-grid-view-"},"What is a Grid-View ?"),(0,r.kt)("p",null,"The Grid-View is a layout system that enables developers to ",(0,r.kt)("strong",{parentName:"p"},"create flexible")," and ",(0,r.kt)("strong",{parentName:"p"},"responsive website designs"),". It consists of a set of rows and columns that can be used to divide the content of a webpage into a grid."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"As an example:")),(0,r.kt)(a.Z,{htmlCode:'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <style>\n      .grid-container {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n        grid-gap: 10px;\n        padding: 10px;\n      }\n\n      .grid-item {\n        background-color: #f1f1f1;\n        text-align: center;\n        padding: 20px;\n        font-size: 30px;\n      }\n    </style>\n  </head>\n  <body>\n    <div class="grid-container">\n      <div class="grid-item">Item 1</div>\n      <div class="grid-item">Item 2</div>\n      <div class="grid-item">Item 3</div>\n      <div class="grid-item">Item 4</div>\n      <div class="grid-item">Item 5</div>\n      <div class="grid-item">Item 6</div>\n    </div>\n  </body>\n</html>\n',elementId:"sku-example1",mdxType:"CustomEditorHTML"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"In this example:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"We have a container element with the class ",(0,r.kt)("inlineCode",{parentName:"li"},'"grid-container"')," that contains six grid items, each with the class ",(0,r.kt)("inlineCode",{parentName:"li"},'"grid-item"'),"."),(0,r.kt)("li",{parentName:"ul"},"We use the CSS ",(0,r.kt)("inlineCode",{parentName:"li"},'"display: grid"')," property to turn the container element into a grid container."),(0,r.kt)("li",{parentName:"ul"},"We then use the ",(0,r.kt)("inlineCode",{parentName:"li"},'"grid-template-columns"')," property to create a flexible grid with columns that are a minimum of ",(0,r.kt)("inlineCode",{parentName:"li"},"200")," pixels wide and a maximum of one fractional unit."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},'"repeat"')," function is used to automatically repeat the columns based on the available space."),(0,r.kt)("li",{parentName:"ul"},"We also set a gap of ",(0,r.kt)("inlineCode",{parentName:"li"},"10")," pixels between the grid items using the ",(0,r.kt)("inlineCode",{parentName:"li"},'"grid-gap"')," property, and add some padding to the container element.")),(0,r.kt)("h2",{id:"building-a-responsive-grid-view"},"Building a Responsive Grid-View"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"To build a responsive Grid-View, you can follow these steps:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Define the HTML structure of your grid, using a container element and a set of child elements that will represent the grid items.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"As an example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<div class="grid-container">\n     <div class="grid-item">Item 1</div>\n     <div class="grid-item">Item 2</div>\n     <div class="grid-item">Item 3</div>\n     <div class="grid-item">Item 4</div>\n     <div class="grid-item">Item 5</div>\n     <div class="grid-item">Item 6</div>\n</div>\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Use CSS to turn the container element into a grid container, using the ",(0,r.kt)("inlineCode",{parentName:"li"},'"display: grid"')," property. You can also specify the number and size of the grid columns using the ",(0,r.kt)("inlineCode",{parentName:"li"},'"grid-template-columns"')," property, as well as the gap between the grid items using the ",(0,r.kt)("inlineCode",{parentName:"li"},'"grid-gap"')," property.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"As an example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},".grid-container {\n     display: grid;\n     grid-template-columns: repeat(3, 1fr);\n     grid-gap: 10px;\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This will create a grid container with three columns, each taking up one fractional unit. The gap between the grid items will be ",(0,r.kt)("inlineCode",{parentName:"li"},"10")," pixels.")),(0,r.kt)("hr",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"To make the grid responsive, you can use CSS media queries to adjust the number and size of the grid columns based on the screen size.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"As an example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},"@media only screen and (max-width: 768px) {\n     .grid-container {\n          grid-template-columns: repeat(2, 1fr);\n     }\n}\n\n@media only screen and (max-width: 480px) {\n     .grid-container {\n          grid-template-columns: 1fr;\n     }\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"In this example:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"We use two media queries to adjust the grid columns for smaller screens."),(0,r.kt)("li",{parentName:"ul"},"When the screen size is less than or equal to ",(0,r.kt)("inlineCode",{parentName:"li"},"768")," pixels, the grid will have two columns."),(0,r.kt)("li",{parentName:"ul"},"When the screen size is less than or equal to ",(0,r.kt)("inlineCode",{parentName:"li"},"480")," pixels, the grid will have a single column.")),(0,r.kt)("hr",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You can add styles to the grid items, such as background colors, text alignment, padding, and font size, using a CSS class selector.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"As an example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},".grid-item {\n     background-color: #f1f1f1;\n     text-align: center;\n     padding: 20px;\n     font-size: 30px;\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This will apply the specified styles to all the grid items in the grid.")),(0,r.kt)("p",null,"By following these steps, you can build a responsive Grid-View that adapts to different screen sizes and orientations."))}m.isMDXComponent=!0},39005:(e,t,n)=>{n.d(t,{Z:()=>m});var i=n(67294),r=n(19604);const a="label_OGF5",s="container_vJjB",o="editorWindow_Gfn9",l="outputwindow_HHdh",d="button_jrAF";var c=n(9200),p=n(36136);const m=e=>{let{htmlCode:t,elementId:n}=e;const[m,u]=(0,i.useState)(t),{colorMode:g}=(0,c.I)();let h=null;function v(){console.log("elementId=",n),document.getElementById(n).innerHTML="",document.getElementById(n).appendChild(h),h.contentDocument.open(),h.contentDocument.write(m),h.contentDocument.close(),h.style.height=h.contentWindow.document.body.scrollHeight+50+"px"}return p.Z.canUseDOM&&(h=document.createElement("iframe"),h.style.width="100%",h.style.height="100%",h.style.background="#fff"),(0,i.useEffect)((()=>{p.Z.canUseDOM&&v()}),[""]),i.createElement("div",{className:s},i.createElement("h3",{className:a},"Editor"),i.createElement(r.ZP,{className:o,height:"40vh",defaultLanguage:"html",defaultValue:m,onChange:u,theme:"dark"===g?"vs-dark":"light",options:{readOnly:!1,minimap:{enabled:!1}}}),i.createElement("div",{className:d},i.createElement("button",{onClick:v,className:"button button--success"},"Run Example >>")),i.createElement("div",{className:l,id:n}))}}}]);