"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[55279],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>u});var r=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},m=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),g=p(a),d=o,u=g["".concat(l,".").concat(d)]||g[d]||c[d]||n;return a?r.createElement(u,s(s({ref:t},m),{},{components:a})):r.createElement(u,s({ref:t},m))}));function u(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,s=new Array(n);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[g]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<n;p++)s[p]=a[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},33343:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>g,frontMatter:()=>n,metadata:()=>i,toc:()=>p});var r=a(87462),o=(a(67294),a(3905));const n={slug:"/html-webstorage",id:"html-webstorage",sidebar_label:"HTML Web Storage",title:"HTML Web Storage API",description:"Learn about HTML Web Storage API using our interactive Code Editor. The HTML Web Storage API provides a way to store key-value pairs locally in the user's browser. There are two types of storage mechanisms provided by this API: localStorage and sessionStorage. Both types of storage have a similar API, but they differ in their persistence and scope.",keywords:["HTML Web Storage API","Web storage in HTML","localStorage in HTML","sessionStorage in HTML","Storing data in HTML web applications","Retrieving data from web storage in HTML","Web storage events in HTML","Managing data expiration in web storage","Web storage size limitations"],image:"https://cscnotes.netlify.app/img/html-large.png"},s=void 0,i={unversionedId:"HTML  APIs/HTML Web Storage/html-webstorage",id:"HTML  APIs/HTML Web Storage/html-webstorage",title:"HTML Web Storage API",description:"Learn about HTML Web Storage API using our interactive Code Editor. The HTML Web Storage API provides a way to store key-value pairs locally in the user's browser. There are two types of storage mechanisms provided by this API: localStorage and sessionStorage. Both types of storage have a similar API, but they differ in their persistence and scope.",source:"@site/docs/tutorial-html/10-HTML  APIs/98-HTML Web Storage/index.mdx",sourceDirName:"10-HTML  APIs/98-HTML Web Storage",slug:"/html-webstorage",permalink:"/html/html-webstorage",draft:!1,tags:[],version:"current",frontMatter:{slug:"/html-webstorage",id:"html-webstorage",sidebar_label:"HTML Web Storage",title:"HTML Web Storage API",description:"Learn about HTML Web Storage API using our interactive Code Editor. The HTML Web Storage API provides a way to store key-value pairs locally in the user's browser. There are two types of storage mechanisms provided by this API: localStorage and sessionStorage. Both types of storage have a similar API, but they differ in their persistence and scope.",keywords:["HTML Web Storage API","Web storage in HTML","localStorage in HTML","sessionStorage in HTML","Storing data in HTML web applications","Retrieving data from web storage in HTML","Web storage events in HTML","Managing data expiration in web storage","Web storage size limitations"],image:"https://cscnotes.netlify.app/img/html-large.png"},sidebar:"ethernetip",previous:{title:"HTML Drag/Drop",permalink:"/html/html-draganddrop"},next:{title:"HTML Web Workers",permalink:"/html/html-webworkers"}},l={},p=[{value:"The <code>localStorage</code>",id:"the-localstorage",level:2},{value:"The <code>sessionStorage</code>",id:"the-sessionstorage",level:2}],m={toc:p};function g(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("head",null,(0,o.kt)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,o.kt)("meta",{name:"twitter:site",content:"@CSC"}),(0,o.kt)("meta",{name:"twitter:title",content:"HTML Web Storage API"}),(0,o.kt)("meta",{name:"twitter:description",content:"Learn about HTML Web Storage API using our interactive Code Editor."}),(0,o.kt)("meta",{name:"twitter:image",content:"https://cscnotes.netlify.app/img/html-large.png"}),(0,o.kt)("meta",{name:"twitter:image:alt",content:"HTML Tutorial Banner Image"}),(0,o.kt)("meta",{name:"og:type",content:"article"}),(0,o.kt)("meta",{name:"og:title",content:"HTML Web Storage API"}),(0,o.kt)("meta",{name:"og:description",content:"Learn about HTML Web Storage API using our interactive Code Editor."}),(0,o.kt)("meta",{name:"og:image",content:"https://cscnotes.netlify.app/img/html-large.png"}),(0,o.kt)("meta",{name:"og:image:alt",content:"HTML Tutorial Banner Image"}),(0,o.kt)("link",{rel:"canonical",href:"https://cscnotes.netlify.app/html/html-webstorage"}),(0,o.kt)("meta",{name:"og:site_name",content:"CSC"})),(0,o.kt)("p",null,"The HTML Web Storage API ",(0,o.kt)("strong",{parentName:"p"},"provides a way to store key-value pairs locally in the user's browser"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"}," There are two types of storage mechanisms provided by this API: ")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://cscnotes.netlify.app/blog/using-local-storage-and-session-storage-in-javascript"},(0,o.kt)("inlineCode",{parentName:"a"},"localStorage"))," and ",(0,o.kt)("a",{parentName:"p",href:"https://cscnotes.netlify.app/blog/using-local-storage-and-session-storage-in-javascript"},(0,o.kt)("inlineCode",{parentName:"a"},"sessionStorage")),"."),(0,o.kt)("p",null,"Both types of storage have a similar API, but they differ in their persistence and scope."),(0,o.kt)("h2",{id:"the-localstorage"},"The ",(0,o.kt)("inlineCode",{parentName:"h2"},"localStorage")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"localStorage")," ",(0,o.kt)("strong",{parentName:"p"},"allows you to store data that persists even after the browser is closed and reopened"),". The data stored in ",(0,o.kt)("inlineCode",{parentName:"p"},"localStorage")," is shared between all tabs and windows opened from the same origin (i.e., same protocol, host, and port)."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"As an example:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'// set the value of a key\nlocalStorage.setItem("username", "johndoe");\n\n// retrieve the value of a key\nconst username = localStorage.getItem("username");\nconsole.log(username); // prints "johndoe"\n\n// remove a key-value pair\nlocalStorage.removeItem("username");\n\n// remove all key-value pairs\nlocalStorage.clear();\n')),(0,o.kt)("h2",{id:"the-sessionstorage"},"The ",(0,o.kt)("inlineCode",{parentName:"h2"},"sessionStorage")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"sessionStorage")," is similar to ",(0,o.kt)("inlineCode",{parentName:"p"},"localStorage"),", but the ",(0,o.kt)("strong",{parentName:"p"},"data stored in ",(0,o.kt)("inlineCode",{parentName:"strong"},"sessionStorage")," is only available for the duration of the session")," (i.e., until the browser is closed or the tab is closed). The data stored in ",(0,o.kt)("inlineCode",{parentName:"p"},"sessionStorage")," is also shared between all tabs and windows opened from the same origin."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"As an example:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'// set the value of a key\nsessionStorage.setItem("username", "johndoe");\n\n// retrieve the value of a key\nconst username = sessionStorage.getItem("username");\nconsole.log(username); // prints "johndoe"\n\n// remove a key-value pair\nsessionStorage.removeItem("username");\n\n// remove all key-value pairs\nsessionStorage.clear();\n')),(0,o.kt)("admonition",{title:"storage limit",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Both ",(0,o.kt)("inlineCode",{parentName:"p"},"localStorage")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"sessionStorage")," have a limit on the amount of data that can be stored (",(0,o.kt)("strong",{parentName:"p"},"typically around 5-10 MB"),"), and they can only store data as strings.")))}g.isMDXComponent=!0}}]);