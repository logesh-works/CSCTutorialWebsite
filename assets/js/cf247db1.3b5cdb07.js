"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[25584],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=s(n),g=r,u=c["".concat(l,".").concat(g)]||c[g]||p[g]||o;return n?a.createElement(u,d(d({ref:t},m),{},{components:n})):a.createElement(u,d({ref:t},m))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,d=new Array(o);d[0]=g;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:r,d[1]=i;for(var s=2;s<o;s++)d[s]=n[s];return a.createElement.apply(null,d)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},31626:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>d,metadata:()=>l,toc:()=>m});var a=n(87462),r=(n(67294),n(3905)),o=n(39005);const d={slug:"/html-draganddrop",id:"html-draganddrop",sidebar_label:"HTML Drag/Drop",title:"HTML Drag and Drop API",description:"Learn how to enable element dragging, customize behavior, and implement advanced features for enhanced user experiences.",keywords:["HTML Drag and Drop API","Drag and Drop Functionality","Drag and Drop Tags","Drag Events","Drop Events","Data Transfer","Draggable Elements","Droppable Areas","Drag and Drop Feedback"],image:"https://cscnotes.netlify.app/img/html-large.png"},i=void 0,l={unversionedId:"HTML  APIs/HTML Drag& Drop/html-draganddrop",id:"HTML  APIs/HTML Drag& Drop/html-draganddrop",title:"HTML Drag and Drop API",description:"Learn how to enable element dragging, customize behavior, and implement advanced features for enhanced user experiences.",source:"@site/docs/tutorial-html/10-HTML  APIs/96-HTML Drag& Drop/index.mdx",sourceDirName:"10-HTML  APIs/96-HTML Drag& Drop",slug:"/html-draganddrop",permalink:"/html/html-draganddrop",draft:!1,tags:[],version:"current",frontMatter:{slug:"/html-draganddrop",id:"html-draganddrop",sidebar_label:"HTML Drag/Drop",title:"HTML Drag and Drop API",description:"Learn how to enable element dragging, customize behavior, and implement advanced features for enhanced user experiences.",keywords:["HTML Drag and Drop API","Drag and Drop Functionality","Drag and Drop Tags","Drag Events","Drop Events","Data Transfer","Draggable Elements","Droppable Areas","Drag and Drop Feedback"],image:"https://cscnotes.netlify.app/img/html-large.png"},sidebar:"ethernetip",previous:{title:"HTML Geolocation",permalink:"/html/html-geolocation"},next:{title:"HTML Web Storage",permalink:"/html/html-webstorage"}},s={},m=[{value:"Tips for advanced drag and drop functionality",id:"tips-for-advanced-drag-and-drop-functionality",level:2},{value:"Dragging multiple elements",id:"dragging-multiple-elements",level:3},{value:"Dragging between different drop zones",id:"dragging-between-different-drop-zones",level:3},{value:"Creating custom drag and drop events",id:"creating-custom-drag-and-drop-events",level:3}],c={toc:m};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("head",null,(0,r.kt)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,r.kt)("meta",{name:"twitter:site",content:"@CSC"}),(0,r.kt)("meta",{name:"twitter:title",content:"HTML Drag and Drop API"}),(0,r.kt)("meta",{name:"twitter:description",content:"Learn about HTML Drag and Drop API using our interactive Code Editor."}),(0,r.kt)("meta",{name:"twitter:image",content:"https://cscnotes.netlify.app/img/html-large.png"}),(0,r.kt)("meta",{name:"twitter:image:alt",content:"HTML Tutorial Banner Image"}),(0,r.kt)("meta",{name:"og:type",content:"article"}),(0,r.kt)("meta",{name:"og:title",content:"HTML Drag and Drop API"}),(0,r.kt)("meta",{name:"og:description",content:"Learn about HTML Drag and Drop API using our interactive Code Editor."}),(0,r.kt)("meta",{name:"og:image",content:"https://cscnotes.netlify.app/img/html-large.png"}),(0,r.kt)("meta",{name:"og:image:alt",content:"HTML Tutorial Banner Image"}),(0,r.kt)("link",{rel:"canonical",href:"https://cscnotes.netlify.app/html/html-draganddrop"}),(0,r.kt)("meta",{name:"og:site_name",content:"CSC"})),(0,r.kt)("p",null,"The HTML Drag and Drop API ",(0,r.kt)("strong",{parentName:"p"},"allows developers to implement drag and drop functionality")," in their web applications. With this API, users can select elements on a web page, drag them to a different location, and drop them there."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"As an example:")),(0,r.kt)(o.Z,{htmlCode:'<!DOCTYPE html>\n<html>\n<head>\n\t<title>HTML Drag and Drop API</title>\n\t<style>\n\t\t#dragme {\n\t\t\tbackground-color: #ccc;\n\t\t\tpadding: 10px;\n\t\t\twidth: 100px;\n\t\t\ttext-align: center;\n\t\t\tcursor: move;\n\t\t}\n\n\t\t#drophere {\n\t\t\tbackground-color: #eee;\n\t\t\tpadding: 50px;\n\t\t\twidth: 200px;\n\t\t\theight: 200px;\n\t\t\ttext-align: center;\n\t\t\tborder: 1px solid #aaa;\n\t\t}\n\t</style>\n\t<script>\n\t\tfunction allowDrop(event) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tfunction drag(event) {\n\t\t\tevent.dataTransfer.setData("text", event.target.id);\n\t\t}\n\n\t\tfunction drop(event) {\n\t\t\tevent.preventDefault();\n\t\t\tvar data = event.dataTransfer.getData("text");\n\t\t\tevent.target.appendChild(document.getElementById(data));\n\t\t}\n\t<\/script>\n</head>\n<body>\n\t<h1>HTML Drag and Drop API Example</h1>\n\n\t<div id="dragme" draggable="true" ondragstart="drag(event)">Drag me</div>\n\n\t<div id="drophere" ondrop="drop(event)" ondragover="allowDrop(event)">Drop here</div>\n</body>\n</html>\n',elementId:"sku-example1",mdxType:"CustomEditorHTML"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"In this example:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"We have two ",(0,r.kt)("inlineCode",{parentName:"li"},"div")," elements: one that can be dragged (",(0,r.kt)("inlineCode",{parentName:"li"},"#dragme"),") and one that can receive the dragged element (",(0,r.kt)("inlineCode",{parentName:"li"},"#drophere"),")."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"draggable")," attribute is set to ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," on the ",(0,r.kt)("inlineCode",{parentName:"li"},"#dragme")," element to allow it to be dragged."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"ondragstart")," event is triggered when the user starts dragging the ",(0,r.kt)("inlineCode",{parentName:"li"},"#dragme")," element."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"setData()")," method is called on the ",(0,r.kt)("inlineCode",{parentName:"li"},"event.dataTransfer")," object to set the data type and the data of the element being dragged."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"ondragover")," event is triggered when the dragged element is over the drop zone."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"preventDefault()")," method is called on the ",(0,r.kt)("inlineCode",{parentName:"li"},"event")," object to allow the element to be dropped in the drop zone."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"ondrop")," event is triggered when the user drops the element onto the drop zone."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"getData()")," method is called on the ",(0,r.kt)("inlineCode",{parentName:"li"},"event.dataTransfer")," object to get the data of the dropped element."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"appendChild()")," method is called on the drop zone element to append the dropped element.")),(0,r.kt)("h2",{id:"tips-for-advanced-drag-and-drop-functionality"},"Tips for advanced drag and drop functionality"),(0,r.kt)("p",null,"Drag and drop functionality in HTML allows users to move elements around a web page by clicking and dragging them. "),(0,r.kt)("p",null,"This ",(0,r.kt)("strong",{parentName:"p"},"can be useful for creating interactive web interfaces"),", such as ",(0,r.kt)("strong",{parentName:"p"},"file upload systems"),", ",(0,r.kt)("strong",{parentName:"p"},"task managers"),", or ",(0,r.kt)("strong",{parentName:"p"},"shopping carts"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Here are some tips for implementing more advanced drag and drop functionality:")),(0,r.kt)("h3",{id:"dragging-multiple-elements"},"Dragging multiple elements"),(0,r.kt)("p",null,"To ",(0,r.kt)("strong",{parentName:"p"},"allow users to select and drag multiple elements at once"),", you can use JavaScript to track which elements are currently selected and create a ",(0,r.kt)("inlineCode",{parentName:"p"},'"ghost"')," element that follows the cursor and represents the group of selected elements. When the user drops the group, you can use JavaScript to place each selected element in the appropriate drop zone."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"As an example:")),(0,r.kt)(o.Z,{htmlCode:'<!DOCTYPE html>\n<html>\n  <style>\n    .container {\n      display: flex;\n      flex-wrap: wrap;\n    }\n\n    .item {\n      width: 100px;\n      height: 100px;\n      background-color: #ccc;\n      margin: 10px;\n    }\n  </style>\n  <body>\n    <div class="container">\n      <div class="item" draggable="true">Item 1</div>\n      <div class="item" draggable="true">Item 2</div>\n      <div class="item" draggable="true">Item 3</div>\n      <div class="item" draggable="true">Item 4</div>\n    </div>\n    <script>\n      let isDragging = false;\n      let selectedItems = [];\n\n      const items = document.querySelectorAll(".item");\n\n      items.forEach((item) => {\n        item.addEventListener("mousedown", () => {\n          isDragging = true;\n          selectedItems = [item];\n          item.classList.add("selected");\n        });\n\n        item.addEventListener("mousemove", () => {\n          if (isDragging && !selectedItems.includes(item)) {\n            selectedItems.push(item);\n            item.classList.add("selected");\n          }\n        });\n\n        item.addEventListener("mouseup", () => {\n          isDragging = false;\n          selectedItems.forEach((selectedItem) => {\n            selectedItem.classList.remove("selected");\n          });\n          selectedItems = [];\n        });\n      });\n\n      document.addEventListener("mousemove", (event) => {\n        if (isDragging) {\n          selectedItems.forEach((selectedItem) => {\n            const rect = selectedItem.getBoundingClientRect();\n            const offsetX = event.clientX - rect.left;\n            const offsetY = event.clientY - rect.top;\n            selectedItem.style.transform = `translate(${offsetX}px, ${offsetY}px)`;\n          });\n        }\n      });\n\n      document.addEventListener("mouseup", () => {\n        isDragging = false;\n        selectedItems.forEach((selectedItem) => {\n          selectedItem.style.transform = "";\n        });\n        selectedItems = [];\n      });\n    <\/script>\n  </body>\n</html>\n',elementId:"sku-example2",mdxType:"CustomEditorHTML"}),(0,r.kt)("h3",{id:"dragging-between-different-drop-zones"},"Dragging between different drop zones"),(0,r.kt)("p",null,"If you want to allow users to drag elements between different drop zones, you can ",(0,r.kt)("strong",{parentName:"p"},"use JavaScript to track which drop zone an element is currently in and update the drop zone when the user drops the element"),". You can also use CSS to provide visual feedback when an element is hovering over a drop zone, such as changing the background color or adding a border."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"As an example:")),(0,r.kt)(o.Z,{htmlCode:'<!DOCTYPE html>\n<html>\n  <style>\n    .container {\n      display: flex;\n      flex-wrap: wrap;\n    }\n\n    .zone,\n    .item {\n      width: 100px;\n      height: 100px;\n      background-color: #ccc;\n      margin: 10px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    .item {\n      cursor: move;\n    }\n\n    .zone.hover {\n      background-color: #fff;\n      border: 2px solid #000;\n    }\n  </style>\n  <body>\n    <div class="container">\n      <div class="zone" id="zone1">Drop Zone 1</div>\n      <div class="zone" id="zone2">Drop Zone 2</div>\n      <div class="item" draggable="true">Item 1</div>\n      <div class="item" draggable="true">Item 2</div>\n      <div class="item" draggable="true">Item 3</div>\n      <div class="item" draggable="true">Item 4</div>\n    </div>\n\n    <script>\n      let isDragging = false;\n      let draggedItem = null;\n\n      const zones = document.querySelectorAll(".zone");\n      const items = document.querySelectorAll(".item");\n\n      zones.forEach((zone) => {\n        zone.addEventListener("dragover", (event) => {\n          event.preventDefault();\n          zone.classList.add("hover");\n        });\n\n        zone.addEventListener("dragleave", (event) => {\n          zone.classList.remove("hover");\n        });\n\n        zone.addEventListener("drop", (event) => {\n          event.preventDefault();\n          const item = draggedItem;\n          zone.appendChild(item);\n          zone.classList.remove("hover");\n        });\n      });\n\n      items.forEach((item) => {\n        item.addEventListener("dragstart", () => {\n          isDragging = true;\n          draggedItem = item;\n        });\n\n        item.addEventListener("dragend", () => {\n          isDragging = false;\n          draggedItem = null;\n        });\n      });\n\n      document.addEventListener("mousemove", (event) => {\n        if (isDragging) {\n          draggedItem.style.transform = `translate(${event.clientX}px, ${event.clientY}px)`;\n        }\n      });\n    <\/script>\n  </body>\n</html>\n',elementId:"sku-example3",mdxType:"CustomEditorHTML"}),(0,r.kt)("h3",{id:"creating-custom-drag-and-drop-events"},"Creating custom drag and drop events"),(0,r.kt)("p",null,'HTML provides several default drag and drop events, such as "dragstart", "dragend," and "drop." However, you can also create custom events using JavaScript to trigger specific actions when an element is dragged or dropped.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"As an example:")),(0,r.kt)(o.Z,{htmlCode:'<!DOCTYPE html>\n<html>\n  <style>\n    .container {\n      display: flex;\n      flex-wrap: wrap;\n    }\n\n    .zone,\n    .item {\n      width: 100px;\n      height: 100px;\n      background-color: #ccc;\n      margin: 10px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    .item {\n      cursor: move;\n    }\n\n    .zone.hover {\n      background-color: #fff;\n      border: 2px solid #000;\n    }\n  </style>\n  <body>\n    <div class="container">\n      <div class="zone" id="zone1">Drop Zone 1</div>\n      <div class="zone" id="zone2">Drop Zone 2</div>\n      <div class="item" draggable="true" data-index="0">Item 1</div>\n      <div class="item" draggable="true" data-index="1">Item 2</div>\n      <div class="item" draggable="true" data-index="2">Item 3</div>\n      <div class="item" draggable="true" data-index="3">Item 4</div>\n    </div>\n    <script>\n      const zones = document.querySelectorAll(".zone");\n      const items = document.querySelectorAll(".item");\n\n      let draggedItem = null;\n\n      function dragStart(event) {\n        const itemIndex = event.target.dataset.index;\n        draggedItem = {index: itemIndex};\n        event.dataTransfer.setData("text/plain", itemIndex);\n      }\n\n      function dragOver(event) {\n        event.preventDefault();\n        this.classList.add("hover");\n      }\n\n      function dragLeave() {\n        this.classList.remove("hover");\n      }\n\n      function drop(event) {\n        event.preventDefault();\n        const droppedIndex = event.dataTransfer.getData("text/plain");\n        if (droppedIndex !== draggedItem.index) {\n          const droppedItem = {index: droppedIndex};\n          const itemContainer = this.querySelector(".items");\n          const draggedElement = itemContainer.querySelector(\n            `[data-index="${draggedItem.index}"]`\n          );\n          const droppedElement = itemContainer.querySelector(\n            `[data-index="${droppedItem.index}"]`\n          );\n          itemContainer.insertBefore(draggedElement, droppedElement);\n        }\n        this.classList.remove("hover");\n      }\n\n      function dragEnd() {\n        draggedItem = null;\n      }\n\n      zones.forEach((zone) => {\n        const itemsContainer = zone.querySelector(".items");\n        itemsContainer.addEventListener("dragstart", dragStart);\n        itemsContainer.addEventListener("dragover", dragOver);\n        itemsContainer.addEventListener("dragleave", dragLeave);\n        itemsContainer.addEventListener("drop", drop);\n        itemsContainer.addEventListener("dragend", dragEnd);\n      });\n\n      items.forEach((item) => {\n        item.addEventListener("dragstart", dragStart);\n        item.addEventListener("dragend", dragEnd);\n      });\n    <\/script>\n  </body>\n</html>\n',elementId:"sku-example4",mdxType:"CustomEditorHTML"}))}p.isMDXComponent=!0},39005:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(67294),r=n(19604);const o="label_OGF5",d="container_vJjB",i="editorWindow_Gfn9",l="outputwindow_HHdh",s="button_jrAF";var m=n(9200),c=n(36136);const p=e=>{let{htmlCode:t,elementId:n}=e;const[p,g]=(0,a.useState)(t),{colorMode:u}=(0,m.I)();let v=null;function h(){console.log("elementId=",n),document.getElementById(n).innerHTML="",document.getElementById(n).appendChild(v),v.contentDocument.open(),v.contentDocument.write(p),v.contentDocument.close(),v.style.height=v.contentWindow.document.body.scrollHeight+50+"px"}return c.Z.canUseDOM&&(v=document.createElement("iframe"),v.style.width="100%",v.style.height="100%",v.style.background="#fff"),(0,a.useEffect)((()=>{c.Z.canUseDOM&&h()}),[""]),a.createElement("div",{className:d},a.createElement("h3",{className:o},"Editor"),a.createElement(r.ZP,{className:i,height:"40vh",defaultLanguage:"html",defaultValue:p,onChange:g,theme:"dark"===u?"vs-dark":"light",options:{readOnly:!1,minimap:{enabled:!1}}}),a.createElement("div",{className:s},a.createElement("button",{onClick:h,className:"button button--success"},"Run Example >>")),a.createElement("div",{className:l,id:n}))}}}]);