"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[53975],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(n),c=r,g=m["".concat(s,".").concat(c)]||m[c]||u[c]||i;return n?a.createElement(g,l(l({ref:t},d),{},{components:n})):a.createElement(g,l({ref:t},d))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},68997:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>d});var a=n(87462),r=(n(67294),n(3905)),i=n(39005);const l={slug:"/css-grid-intro",id:"css-grid-intro",sidebar_label:"Grid Intro",title:"Grid Layout",description:"Learn about CSS Grid property using our interactive Code Editor. CSS Grid Layout is a two-dimensional layout system for the web that allows us to create layout patterns natively in the browser. It is a new layout system that is not limited to rows and columns like the older CSS layout systems, but instead allows us to place elements in any desired location on the page.",keywords:["css grid","css grid layout","grid layout","grid template rows","flexbox grid","css grid template","grid template columns css","css grid template columns","grid area css","display grid in css","css grid tutorial"],image:"https://cscnotes.netlify.app/img/css-large.png"},o=void 0,s={unversionedId:"CSS Grid/Grid Intro/css-grid-intro",id:"CSS Grid/Grid Intro/css-grid-intro",title:"Grid Layout",description:"Learn about CSS Grid property using our interactive Code Editor. CSS Grid Layout is a two-dimensional layout system for the web that allows us to create layout patterns natively in the browser. It is a new layout system that is not limited to rows and columns like the older CSS layout systems, but instead allows us to place elements in any desired location on the page.",source:"@site/docs/tutorial-css/08-CSS Grid/02-Grid Intro/index.mdx",sourceDirName:"08-CSS Grid/02-Grid Intro",slug:"/css-grid-intro",permalink:"/css/css-grid-intro",draft:!1,tags:[],version:"current",frontMatter:{slug:"/css-grid-intro",id:"css-grid-intro",sidebar_label:"Grid Intro",title:"Grid Layout",description:"Learn about CSS Grid property using our interactive Code Editor. CSS Grid Layout is a two-dimensional layout system for the web that allows us to create layout patterns natively in the browser. It is a new layout system that is not limited to rows and columns like the older CSS layout systems, but instead allows us to place elements in any desired location on the page.",keywords:["css grid","css grid layout","grid layout","grid template rows","flexbox grid","css grid template","grid template columns css","css grid template columns","grid area css","display grid in css","css grid tutorial"],image:"https://cscnotes.netlify.app/img/css-large.png"},sidebar:"ethernetip",previous:{title:"RWD  Frameworks",permalink:"/css/css-rwd-frameworks"},next:{title:"Grid Container",permalink:"/css/css-grid-container"}},p={},d=[{value:"The Display Property",id:"the-display-property",level:2},{value:"The Grid Columns",id:"the-grid-columns",level:2},{value:"The Grid rows",id:"the-grid-rows",level:2},{value:"The Grid Gaps",id:"the-grid-gaps",level:2}],m={toc:d};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("head",null,(0,r.kt)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,r.kt)("meta",{name:"twitter:site",content:"@CSC"}),(0,r.kt)("meta",{name:"twitter:title",content:"grid layout"}),(0,r.kt)("meta",{name:"twitter:description",content:"Learn about CSS Grid using our interactive Code Editor."}),(0,r.kt)("meta",{name:"twitter:image",content:"https://cscnotes.netlify.app/img/css-large.png"}),(0,r.kt)("meta",{name:"twitter:image:alt",content:"CSS Tutorial Banner Image"}),(0,r.kt)("meta",{name:"og:type",content:"article"}),(0,r.kt)("meta",{name:"og:title",content:"grid layout"}),(0,r.kt)("meta",{name:"og:description",content:"Learn about CSS Grid using our interactive Code Editor."}),(0,r.kt)("meta",{name:"og:image",content:"https://cscnotes.netlify.app/img/css-large.png"}),(0,r.kt)("meta",{name:"og:image:alt",content:"CSS Tutorial Banner Image"}),(0,r.kt)("meta",{name:"og:site_name",content:"CSC"}),(0,r.kt)("meta",{name:"og:url",content:"https://cscnotes.netlify.app/css/css-grid-intro"})),(0,r.kt)("p",null,"CSS Grid Layout is a two-dimensional layout system for the web that allows us to create layout patterns natively in the browser. "),(0,r.kt)("p",null,"It is a new layout system that is not limited to rows and columns like the older CSS layout systems, but instead allows us to place elements in any desired location on the page."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Here are some of the key CSS properties used in CSS Grid Layout are:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"display: grid")," - Defines an element as a grid container.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"grid-template-columns")," - Specifies the number and size of the columns in a grid.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"grid-template-rows")," - Specifies the number and size of the rows in a grid.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"grid-template-areas")," - Defines named grid areas that can be used to place grid items.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"grid-gap")," - Sets the spacing between grid rows and columns.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"grid-column-start/grid-column-end")," - Specifies the start and end positions of a grid item along the column axis.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"grid-row-start/grid-row-end")," - Specifies the start and end positions of a grid item along the row axis."))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"}," As an example:")),(0,r.kt)(i.Z,{htmlCode:'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <style>\n      .grid-container {\n        display: grid;\n        grid-template-columns: repeat(2, 1fr);\n        grid-template-rows: auto 1fr auto;\n        grid-gap: 20px;\n        height: 100vh;\n      }\n\n      header,\n      footer {\n        grid-column: 1 / span 2;\n      }\n\n      .grid-item {\n        background-color: #fff;\n        padding: 20px;\n      }\n    </style>\n  </head>\n  <body>\n    <div class="grid-container">\n      <header>Header</header>\n      <div class="grid-item">Column 1</div>\n      <div class="grid-item">Column 2</div>\n      <footer>Footer</footer>\n    </div>\n  </body>\n</html>\n',elementId:"sku-example1",mdxType:"CustomEditorHTML"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"In this example:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The CSS code defines the ",(0,r.kt)("inlineCode",{parentName:"li"},"grid-container")," as a grid using ",(0,r.kt)("inlineCode",{parentName:"li"},"display: grid"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"grid-template-columns")," is set to ",(0,r.kt)("inlineCode",{parentName:"li"},"repeat(2, 1fr)")," to create two columns of equal width, and ",(0,r.kt)("inlineCode",{parentName:"li"},"grid-template-rows")," is set to ",(0,r.kt)("inlineCode",{parentName:"li"},"auto "),"1fr",(0,r.kt)("inlineCode",{parentName:"li"}," auto")," to create three rows, with the middle row taking up the remaining vertical space."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"grid-gap")," is used to add a ",(0,r.kt)("inlineCode",{parentName:"li"},"20px")," gap between grid items."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"header")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"footer")," are set to span both columns using ",(0,r.kt)("inlineCode",{parentName:"li"},"grid-column: 1 / span 2"),"."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},".grid-item")," class sets the background color to white and adds ",(0,r.kt)("inlineCode",{parentName:"li"},"20px")," of padding.")),(0,r.kt)("h2",{id:"the-display-property"},"The Display Property"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"display")," property in CSS is used to set the display behavior of an element."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Common values for the display property are:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"grid"),":")," ",(0,r.kt)("inlineCode",{parentName:"p"},"grid")," is used to create a grid container.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"inline-grid"),":")," ",(0,r.kt)("inlineCode",{parentName:"p"},"inline-grid")," is used to create an inline grid container."))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"An example of ",(0,r.kt)("inlineCode",{parentName:"strong"},"display")," property to create a basic grid layout:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},".grid-container {\n     display: grid;\n     grid-template-columns: 1fr 1fr 1fr;\n     grid-gap: 20px;\n}\n\n.grid-item {\n     background-color: #ddd;\n     padding: 20px;\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"In this example:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"We create a grid container with three equal-sized columns, and a gap of ",(0,r.kt)("inlineCode",{parentName:"li"},"20")," pixels between the columns and rows."),(0,r.kt)("li",{parentName:"ul"},"Each grid item has a gray background and ",(0,r.kt)("inlineCode",{parentName:"li"},"20")," pixels of padding.")),(0,r.kt)("h2",{id:"the-grid-columns"},"The Grid Columns"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"grid-template-columns")," property use to define the number and size of columns in a grid."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"As an example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},".grid-container {\n     display: grid;\n     grid-template-columns: 25% 50% 25%;\n}\n")),(0,r.kt)("p",null,"We can also use the ",(0,r.kt)("inlineCode",{parentName:"p"},"repeat()")," function to create a series of columns with a specific width."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"As an example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},".grid-container {\n     display: grid;\n     grid-template-columns: repeat(6, 100px);\n}\n")),(0,r.kt)("p",null,"We can also mix and match these methods to create more complex grid layouts."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"As an example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},".grid-container {\n     display: grid;\n     grid-template-columns: 25% repeat(4, 1fr) 100px;\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"In thise example:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This creates a grid with six columns, where the first column takes up ",(0,r.kt)("inlineCode",{parentName:"li"},"25%")," of the width, the next four columns take up an equal amount of remaining space using the ",(0,r.kt)("inlineCode",{parentName:"li"},"1fr")," unit, and the last column has a fixed width of ",(0,r.kt)("inlineCode",{parentName:"li"},"100px"),".")),(0,r.kt)("h2",{id:"the-grid-rows"},"The Grid rows"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"grid-template-rows")," property is used to define the number and size of rows in a grid."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"As an example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},".grid-container {\n     display: grid;\n     grid-template-rows: 100px 1fr;\n}\n")),(0,r.kt)("p",null,"You can also use the ",(0,r.kt)("inlineCode",{parentName:"p"},"repeat()")," function to create a series of rows with a specific height."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"As an example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},".grid-container {\n     display: grid;\n     grid-template-rows: repeat(6, 50px);\n}\n")),(0,r.kt)("p",null,"Just like with columns, you can also mix and match these methods to create more complex grid layouts."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"As an example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},".grid-container {\n     display: grid;\n     grid-template-rows: 100px repeat(3, 1fr) 50px;\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"In this example:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This creates a grid with five rows, where the first row takes up ",(0,r.kt)("inlineCode",{parentName:"li"},"100px")," of height, the next three rows take up an equal amount of remaining space using the ",(0,r.kt)("inlineCode",{parentName:"li"},"1fr")," unit, and the last row has a fixed height of ",(0,r.kt)("inlineCode",{parentName:"li"},"50px"),".")),(0,r.kt)("h2",{id:"the-grid-gaps"},"The Grid Gaps"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"grid-gap")," property helps to create a gap between rows and columns in a grid."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"As an example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},".grid-container {\n     display: grid;\n     grid-gap: 20px;\n}\n")),(0,r.kt)("p",null,"You can also set different gap sizes for rows and columns using the ",(0,r.kt)("inlineCode",{parentName:"p"},"grid-row-gap")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"grid-column-gap")," properties."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"As an example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},".grid-container {\n     display: grid;\n     grid-row-gap: 10px;\n     grid-column-gap: 20px;\n}\n")),(0,r.kt)("p",null,"Additionally, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"grid-template-rows")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"grid-template-columns")," properties to specify the size of rows and columns while setting the gap at the same time."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"As an example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},".grid-container {\n     display: grid;\n     grid-template-rows: repeat(3, 100px);\n     grid-template-columns: repeat(3, 100px);\n     grid-gap: 10px;\n}\n")))}u.isMDXComponent=!0},39005:(e,t,n)=>{n.d(t,{Z:()=>u});var a=n(67294),r=n(19604);const i="label_OGF5",l="container_vJjB",o="editorWindow_Gfn9",s="outputwindow_HHdh",p="button_jrAF";var d=n(9200),m=n(36136);const u=e=>{let{htmlCode:t,elementId:n}=e;const[u,c]=(0,a.useState)(t),{colorMode:g}=(0,d.I)();let k=null;function h(){console.log("elementId=",n),document.getElementById(n).innerHTML="",document.getElementById(n).appendChild(k),k.contentDocument.open(),k.contentDocument.write(u),k.contentDocument.close(),k.style.height=k.contentWindow.document.body.scrollHeight+50+"px"}return m.Z.canUseDOM&&(k=document.createElement("iframe"),k.style.width="100%",k.style.height="100%",k.style.background="#fff"),(0,a.useEffect)((()=>{m.Z.canUseDOM&&h()}),[""]),a.createElement("div",{className:l},a.createElement("h3",{className:i},"Editor"),a.createElement(r.ZP,{className:o,height:"40vh",defaultLanguage:"html",defaultValue:u,onChange:c,theme:"dark"===g?"vs-dark":"light",options:{readOnly:!1,minimap:{enabled:!1}}}),a.createElement("div",{className:p},a.createElement("button",{onClick:h,className:"button button--success"},"Run Example >>")),a.createElement("div",{className:s,id:n}))}}}]);