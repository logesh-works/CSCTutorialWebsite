"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[21388],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),m=c(n),h=a,g=m["".concat(s,".").concat(h)]||m[h]||d[h]||o;return n?i.createElement(g,l(l({ref:t},p),{},{components:n})):i.createElement(g,l({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=h;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[m]="string"==typeof e?e:a,l[1]=r;for(var c=2;c<o;c++)l[c]=n[c];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},60416:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var i=n(87462),a=(n(67294),n(3905)),o=n(39005);const l={slug:"/css-object-fit",id:"css-object-fit",sidebar_label:"CSS Object-fit",title:"Introduction to CSS Object-fit",description:"Learn about CSS Object-fit using our interactive Code Editor. Our CSS tutorial is developed both for beginners and professionals.",keywords:["CSS object-fit","Object-fit property in CSS","CSS object-fit fill","CSS object-fit contain","CSS object-fit cover","CSS object-fit none","CSS object-fit scale-down","CSS object-fit examples","CSS object-fit image","CSS object-fit video","CSS object-fit and responsive design","CSS Playground","CSS Code Editor","Online IDE","Online CSS Playground","Interactive IDE","CSS Semantics","CSS Validation","Colors","XML","MySQL","Icons","CSS","JavaScript","PHP","jQuery","Bootstrap","NodeJS","React","Tutorials","Programming","Web Development","Training","Learning","Quiz","Exercises","Courses","Lessons","References","Examples","Learn to code","Source code","Demos","Tips","Website"],image:"https://cscnotes.netlify.app/img/css-large.png"},r=void 0,s={unversionedId:"CSS Advanced/CSS The object-fit/css-object-fit",id:"CSS Advanced/CSS The object-fit/css-object-fit",title:"Introduction to CSS Object-fit",description:"Learn about CSS Object-fit using our interactive Code Editor. Our CSS tutorial is developed both for beginners and professionals.",source:"@site/docs/tutorial-css/04-CSS Advanced/34-CSS The object-fit/index.mdx",sourceDirName:"04-CSS Advanced/34-CSS The object-fit",slug:"/css-object-fit",permalink:"/css/css-object-fit",draft:!1,tags:[],version:"current",frontMatter:{slug:"/css-object-fit",id:"css-object-fit",sidebar_label:"CSS Object-fit",title:"Introduction to CSS Object-fit",description:"Learn about CSS Object-fit using our interactive Code Editor. Our CSS tutorial is developed both for beginners and professionals.",keywords:["CSS object-fit","Object-fit property in CSS","CSS object-fit fill","CSS object-fit contain","CSS object-fit cover","CSS object-fit none","CSS object-fit scale-down","CSS object-fit examples","CSS object-fit image","CSS object-fit video","CSS object-fit and responsive design","CSS Playground","CSS Code Editor","Online IDE","Online CSS Playground","Interactive IDE","CSS Semantics","CSS Validation","Colors","XML","MySQL","Icons","CSS","JavaScript","PHP","jQuery","Bootstrap","NodeJS","React","Tutorials","Programming","Web Development","Training","Learning","Quiz","Exercises","Courses","Lessons","References","Examples","Learn to code","Source code","Demos","Tips","Website"],image:"https://cscnotes.netlify.app/img/css-large.png"},sidebar:"ethernetip",previous:{title:"CSS Image Reflection",permalink:"/css/css-image-reflection"},next:{title:"CSS object-positon",permalink:"/css/css-object-postion"}},c={},p=[{value:"CSS Object-fit Property",id:"css-object-fit-property",level:2},{value:"The <code>object-fit:cover</code>",id:"the-object-fitcover",level:2},{value:"The <code>object-fit:contain</code>",id:"the-object-fitcontain",level:2},{value:"The <code>object-fit:fill</code>",id:"the-object-fitfill",level:2},{value:"The <code>object-fit:none</code>",id:"the-object-fitnone",level:2},{value:"The <code>object-fit:scale-down</code>",id:"the-object-fitscale-down",level:2}],m={toc:p};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("head",null,(0,a.kt)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,a.kt)("meta",{name:"twitter:site",content:"@CSC"}),(0,a.kt)("meta",{name:"twitter:title",content:"Introduction to CSS Object-fit"}),(0,a.kt)("meta",{name:"twitter:description",content:"Learn about CSS Object-fit using our interactive Code Editor."}),(0,a.kt)("meta",{name:"twitter:image",content:"https://cscnotes.netlify.app/img/css-large.png"}),(0,a.kt)("meta",{name:"twitter:image:alt",content:"CSS Tutorial Banner Image"}),(0,a.kt)("meta",{name:"og:type",content:"article"}),(0,a.kt)("meta",{name:"og:title",content:"Introduction to CSS Object-fit"}),(0,a.kt)("meta",{name:"og:description",content:"Learn about CSS Object-fit using our interactive Code Editor."}),(0,a.kt)("meta",{name:"og:image",content:"https://cscnotes.netlify.app/img/css-large.png"}),(0,a.kt)("meta",{name:"og:image:alt",content:"CSS Tutorial Banner Image"}),(0,a.kt)("meta",{name:"og:site_name",content:"CSC"}),(0,a.kt)("meta",{name:"og:url",content:"https://cscnotes.netlify.app/css/css-object-fit"})),(0,a.kt)("h2",{id:"css-object-fit-property"},"CSS Object-fit Property"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"object-fit")," property is a CSS property that specifies how an element, such as an image or video, should be resized to fit its container. It is ",(0,a.kt)("strong",{parentName:"p"},"used to control the aspect ratio of an element"),", and can be particularly useful when working with responsive design."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"The ",(0,a.kt)("inlineCode",{parentName:"strong"},"object-fit")," property can take several values:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"fill"),":")," This value stretches the image to fill the container, potentially distorting its aspect ratio.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"contain"),":")," This value scales the image so that it fits entirely within the container, preserving its aspect ratio.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"cover"),":")," This value scales the image so that it covers the entire container, potentially cropping parts of the image to preserve its aspect ratio.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"none"),":")," This value displays the entire image within the container, without any scaling or cropping.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"scale-down"),":")," This value scales the image down if it is larger than the container, otherwise it behaves like ",(0,a.kt)("inlineCode",{parentName:"p"},"contain"),"."))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"As an example:")),(0,a.kt)(o.Z,{htmlCode:'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <style>\n      .image-container {\n        width: 100%;\n        height: 400px;\n        position: relative;\n      }\n\n      .image-container img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n    </style>\n  </head>\n  <body>\n    <div class="image-container">\n      <img\n        src="https://images.pexels.com/photos/1519088/pexels-photo-1519088.jpeg?auto=compress&cs=tinysrgb&w=600"\n        alt="Example Image"\n      />\n    </div>\n  </body>\n</html>\n',elementId:"sku-example1",mdxType:"CustomEditorHTML"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"In this example:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"We have a ",(0,a.kt)("inlineCode",{parentName:"li"},"div")," element with a class of ",(0,a.kt)("inlineCode",{parentName:"li"},"image-container")," that has a fixed height of ",(0,a.kt)("inlineCode",{parentName:"li"},"400")," pixels and a width of ",(0,a.kt)("inlineCode",{parentName:"li"},"100%"),"."),(0,a.kt)("li",{parentName:"ul"},"We then have an ",(0,a.kt)("inlineCode",{parentName:"li"},"img")," element inside the container with its width and height set to ",(0,a.kt)("inlineCode",{parentName:"li"},"100%"),", and we're applying the ",(0,a.kt)("inlineCode",{parentName:"li"},"object-fit")," property with a value of ",(0,a.kt)("inlineCode",{parentName:"li"},"cover"),", which scales the image so that it covers the entire container while preserving its aspect ratio.")),(0,a.kt)("h2",{id:"the-object-fitcover"},"The ",(0,a.kt)("inlineCode",{parentName:"h2"},"object-fit:cover")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Here's an example of using ",(0,a.kt)("inlineCode",{parentName:"strong"},"object-fit: cover")," property:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Object Fit Cover Example</title>\n    <style>\n      .image-container {\n        width: 400px;\n        height: 400px;\n        overflow: hidden;\n      }\n\n      .image-container img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n    </style>\n  </head>\n  <body>\n    <h1>Object Fit Cover Example</h1>\n    <div class="image-container">\n      <img src="example.jpg" alt="Example Image" />\n    </div>\n  </body>\n</html>\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"In this example:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"We have an HTML document that includes a ",(0,a.kt)("inlineCode",{parentName:"li"},"div")," element with a class of ",(0,a.kt)("inlineCode",{parentName:"li"},"image-container")," and an ",(0,a.kt)("inlineCode",{parentName:"li"},"img")," element inside it."),(0,a.kt)("li",{parentName:"ul"},"We've applied some CSS styles to the ",(0,a.kt)("inlineCode",{parentName:"li"},"image-container")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"img")," elements to create the cover effect."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"image-container")," has a fixed width and height of ",(0,a.kt)("inlineCode",{parentName:"li"},"400")," pixels, and we're applying ",(0,a.kt)("inlineCode",{parentName:"li"},"overflow: hidden"),"; to the container."),(0,a.kt)("li",{parentName:"ul"},"This means that any content that overflows the container will be hidden."),(0,a.kt)("li",{parentName:"ul"},"Inside the container, we have an ",(0,a.kt)("inlineCode",{parentName:"li"},"img")," element with its width and height set to ",(0,a.kt)("inlineCode",{parentName:"li"},"100%"),", and we're applying the ",(0,a.kt)("inlineCode",{parentName:"li"},"object-fit")," property with a value of ",(0,a.kt)("inlineCode",{parentName:"li"},"cover"),", which scales the image so that it covers the entire container while preserving its aspect ratio."),(0,a.kt)("li",{parentName:"ul"},"This results in a ",(0,a.kt)("inlineCode",{parentName:"li"},'"cover"')," effect, where the image is scaled to fill the container and any parts of the image that overflow the container are hidden.")),(0,a.kt)("h2",{id:"the-object-fitcontain"},"The ",(0,a.kt)("inlineCode",{parentName:"h2"},"object-fit:contain")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Here's an example of using ",(0,a.kt)("inlineCode",{parentName:"strong"},"object-fit: contain")," property:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Object Fit Contain Example</title>\n    <style>\n      .image-container {\n        width: 400px;\n        height: 400px;\n        border: 1px solid black;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n\n      .image-container img {\n        max-width: 100%;\n        max-height: 100%;\n        object-fit: contain;\n      }\n    </style>\n  </head>\n  <body>\n    <h1>Object Fit Contain Example</h1>\n    <div class="image-container">\n      <img src="example.jpg" alt="Example Image" />\n    </div>\n  </body>\n</html>\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"In this example:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Inside the container, we have an ",(0,a.kt)("inlineCode",{parentName:"li"},"img")," element with its ",(0,a.kt)("inlineCode",{parentName:"li"},"max-width")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"max-height")," set to ",(0,a.kt)("inlineCode",{parentName:"li"},"100%"),", and we're applying the ",(0,a.kt)("inlineCode",{parentName:"li"},"object-fit")," property with a value of ",(0,a.kt)("inlineCode",{parentName:"li"},"contain"),", which scales the image so that it fits entirely within the container while preserving its aspect ratio. "),(0,a.kt)("li",{parentName:"ul"},"This results in a ",(0,a.kt)("inlineCode",{parentName:"li"},'"contain"')," effect, where the entire image is visible within the container, but there may be empty space around the image if the aspect ratio of the container is different from that of the image.")),(0,a.kt)("h2",{id:"the-object-fitfill"},"The ",(0,a.kt)("inlineCode",{parentName:"h2"},"object-fit:fill")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Here's an example of using ",(0,a.kt)("inlineCode",{parentName:"strong"},"object-fit: fill")," property:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},'<!DOCTYPE html>\n<html>\n<head>\n  <title>Object Fit Fill Example</title>\n  <style>\n    .image-container {\n      width: 400px;\n      height: 400px;\n      border: 1px solid black;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    .image-container img {\n      max-width: 100%;\n      max-height: 100%;\n      object-fit: fill;\n    }\n  </style>\n</head>\n<body>\n  <h1>Object Fit Fill Example</h1>\n  <div class="image-container">\n    <img src="example.jpg" alt="Example Image">\n  </div>\n</body>\n</html>\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"In this example:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Inside the container, we have an ",(0,a.kt)("inlineCode",{parentName:"li"},"img")," element with its ",(0,a.kt)("inlineCode",{parentName:"li"},"max-width")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"max-height")," set to ",(0,a.kt)("inlineCode",{parentName:"li"},"100%"),", and we're applying the ",(0,a.kt)("inlineCode",{parentName:"li"},"object-fit")," property with a value of ",(0,a.kt)("inlineCode",{parentName:"li"},"fill"),", which scales the image so that it completely fills the container, even if the aspect ratio of the image doesn't match that of the container."),(0,a.kt)("li",{parentName:"ul"},"This results in a ",(0,a.kt)("inlineCode",{parentName:"li"},'"fill"')," effect, where the entire container is filled with the image, and parts of the image may be cropped if the aspect ratio of the container is different from that of the image.")),(0,a.kt)("h2",{id:"the-object-fitnone"},"The ",(0,a.kt)("inlineCode",{parentName:"h2"},"object-fit:none")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Here's an example of using ",(0,a.kt)("inlineCode",{parentName:"strong"},"object-fit: none")," property:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Object Fit None Example</title>\n    <style>\n      .image-container {\n        width: 400px;\n        height: 400px;\n        border: 1px solid black;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n\n      .image-container img {\n        max-width: 100%;\n        max-height: 100%;\n        object-fit: none;\n      }\n    </style>\n  </head>\n  <body>\n    <h1>Object Fit None Example</h1>\n    <div class="image-container">\n      <img src="example.jpg" alt="Example Image" />\n    </div>\n  </body>\n</html>\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"In this example:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Inside the container, we have an ",(0,a.kt)("inlineCode",{parentName:"li"},"img")," element with its ",(0,a.kt)("inlineCode",{parentName:"li"},"max-width")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"max-height")," set to ",(0,a.kt)("inlineCode",{parentName:"li"},"100%"),", and we're applying the ",(0,a.kt)("inlineCode",{parentName:"li"},"object-fit")," property with a value of ",(0,a.kt)("inlineCode",{parentName:"li"},"none"),", which disables any object fitting. "),(0,a.kt)("li",{parentName:"ul"},"This means that the image will be displayed in its original size and aspect ratio, and the container will adjust its size to fit the image.")),(0,a.kt)("h2",{id:"the-object-fitscale-down"},"The ",(0,a.kt)("inlineCode",{parentName:"h2"},"object-fit:scale-down")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Here's an example of using ",(0,a.kt)("inlineCode",{parentName:"strong"},"object-fit: scale-down")," property:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Object Fit Scale-Down Example</title>\n    <style>\n      .image-container {\n        width: 400px;\n        height: 400px;\n        border: 1px solid black;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n\n      .image-container img {\n        max-width: 100%;\n        max-height: 100%;\n        object-fit: scale-down;\n      }\n    </style>\n  </head>\n  <body>\n    <h1>Object Fit Scale-Down Example</h1>\n    <div class="image-container">\n      <img src="example.jpg" alt="Example Image" />\n    </div>\n  </body>\n</html>\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"In this example:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Inside the container, we have an ",(0,a.kt)("inlineCode",{parentName:"li"},"img")," element with its ",(0,a.kt)("inlineCode",{parentName:"li"},"max-width")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"max-height")," set to ",(0,a.kt)("inlineCode",{parentName:"li"},"100%"),", and we're applying the ",(0,a.kt)("inlineCode",{parentName:"li"},"object-fit")," property with a value of ",(0,a.kt)("inlineCode",{parentName:"li"},"scale-down"),", which scales the image down to fit within the container if it is larger than the container's dimensions.")))}d.isMDXComponent=!0},39005:(e,t,n)=>{n.d(t,{Z:()=>d});var i=n(67294),a=n(19604);const o="label_OGF5",l="container_vJjB",r="editorWindow_Gfn9",s="outputwindow_HHdh",c="button_jrAF";var p=n(9200),m=n(36136);const d=e=>{let{htmlCode:t,elementId:n}=e;const[d,h]=(0,i.useState)(t),{colorMode:g}=(0,p.I)();let f=null;function u(){console.log("elementId=",n),document.getElementById(n).innerHTML="",document.getElementById(n).appendChild(f),f.contentDocument.open(),f.contentDocument.write(d),f.contentDocument.close(),f.style.height=f.contentWindow.document.body.scrollHeight+50+"px"}return m.Z.canUseDOM&&(f=document.createElement("iframe"),f.style.width="100%",f.style.height="100%",f.style.background="#fff"),(0,i.useEffect)((()=>{m.Z.canUseDOM&&u()}),[""]),i.createElement("div",{className:l},i.createElement("h3",{className:o},"Editor"),i.createElement(a.ZP,{className:r,height:"40vh",defaultLanguage:"html",defaultValue:d,onChange:h,theme:"dark"===g?"vs-dark":"light",options:{readOnly:!1,minimap:{enabled:!1}}}),i.createElement("div",{className:c},i.createElement("button",{onClick:u,className:"button button--success"},"Run Example >>")),i.createElement("div",{className:s,id:n}))}}}]);