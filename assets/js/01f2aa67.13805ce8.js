"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[78970],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>S});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,S=m["".concat(s,".").concat(d)]||m[d]||p[d]||a;return n?r.createElement(S,l(l({ref:t},u),{},{components:n})):r.createElement(S,l({ref:t},u))}));function S(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},51867:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var r=n(87462),o=(n(67294),n(3905)),a=n(39005);const l={slug:"/css-counters",id:"css-counters",sidebar_label:"CSS Counters",title:"Using CSS counters",description:"Use CSS counters to track and style elements like variables. CSS counters count how many times elements are used, and you can display their values. Learn about the counter-reset, counter-increment, and content properties with interactive examples in our CSS tutorial.",keywords:["CSS counters","Counter styles in CSS","CSS counter-reset property","CSS counter-increment property","CSS counter values","CSS counter examples","Styling lists with CSS counters","CSS counters and numbering","CSS counters and content generation","web development","CSC","interactive tutorial","CSS code","CSS properties","counters","CSS variables","tracking elements"],image:"https://cscnotes.netlify.app/img/css-large.png"},i=void 0,s={unversionedId:"CSS Tutorial/CSS Counters/css-counters",id:"CSS Tutorial/CSS Counters/css-counters",title:"Using CSS counters",description:"Use CSS counters to track and style elements like variables. CSS counters count how many times elements are used, and you can display their values. Learn about the counter-reset, counter-increment, and content properties with interactive examples in our CSS tutorial.",source:"@site/docs/tutorial-css/02-CSS Tutorial/72-CSS Counters/index.mdx",sourceDirName:"02-CSS Tutorial/72-CSS Counters",slug:"/css-counters",permalink:"/css/css-counters",draft:!1,tags:[],version:"current",frontMatter:{slug:"/css-counters",id:"css-counters",sidebar_label:"CSS Counters",title:"Using CSS counters",description:"Use CSS counters to track and style elements like variables. CSS counters count how many times elements are used, and you can display their values. Learn about the counter-reset, counter-increment, and content properties with interactive examples in our CSS tutorial.",keywords:["CSS counters","Counter styles in CSS","CSS counter-reset property","CSS counter-increment property","CSS counter values","CSS counter examples","Styling lists with CSS counters","CSS counters and numbering","CSS counters and content generation","web development","CSC","interactive tutorial","CSS code","CSS properties","counters","CSS variables","tracking elements"],image:"https://cscnotes.netlify.app/img/css-large.png"},sidebar:"ethernetip",previous:{title:"CSS Forms",permalink:"/css/css-forms"},next:{title:"CSS Website-Layout",permalink:"/css/css-website-layout"}},c={},u=[{value:"Counter Initialization",id:"counter-initialization",level:3},{value:"Counter Increment",id:"counter-increment",level:3},{value:"Displaying Counter values",id:"displaying-counter-values",level:3},{value:"Nesting Counters",id:"nesting-counters",level:2},{value:"CSS Counter Properties",id:"css-counter-properties",level:2}],m={toc:u};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("head",null,(0,o.kt)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,o.kt)("meta",{name:"twitter:site",content:"@CSC"}),(0,o.kt)("meta",{name:"twitter:title",content:"Introduction to CSS Counters"}),(0,o.kt)("meta",{name:"twitter:description",content:"Learn about CSS Counters using our interactive Code Editor."}),(0,o.kt)("meta",{name:"twitter:image",content:"https://cscnotes.netlify.app/img/css-large.png"}),(0,o.kt)("meta",{name:"twitter:image:alt",content:"CSS Tutorial Banner Image"}),(0,o.kt)("meta",{name:"og:type",content:"article"}),(0,o.kt)("meta",{name:"og:title",content:"Introduction to CSS Counters"}),(0,o.kt)("meta",{name:"og:description",content:"Learn about CSS Counters using our interactive Code Editor."}),(0,o.kt)("meta",{name:"og:image",content:"https://cscnotes.netlify.app/img/css-large.png"}),(0,o.kt)("meta",{name:"og:image:alt",content:"CSS Tutorial Banner Image"}),(0,o.kt)("meta",{name:"og:site_name",content:"CSC"}),(0,o.kt)("meta",{name:"og:url",content:"https://cscnotes.netlify.app/css/css-counters"}),(0,o.kt)("link",{rel:"canonical",href:"https://cscnotes.netlify.app/css/css-counters"})),(0,o.kt)("p",null,'CSS counters are like "variables" maintained by CSS whose values can be incremented by CSS rules (to track how many times they are used).'),(0,o.kt)("p",null,"A CSS counter is created with the ",(0,o.kt)("inlineCode",{parentName:"p"},"counter-reset")," property. "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"counter-reset")," property creates or resets one or more counters."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"counter-reset")," property is usually used together with the ",(0,o.kt)("inlineCode",{parentName:"li"},"counter-increment")," property and the ",(0,o.kt)("inlineCode",{parentName:"li"},"content")," property.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Here's a brief explanation of how CSS counters work:")),(0,o.kt)("h3",{id:"counter-initialization"},"Counter Initialization"),(0,o.kt)("p",null," You can initialize a counter with the counter-reset property. This sets the initial value of the counter. "),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"For example:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},".counter {\n    counter-reset: myCounter 0;\n}\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"In the above example:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"We initializes a counter named ",(0,o.kt)("inlineCode",{parentName:"li"},"myCounter")," with an initial value of 0.")),(0,o.kt)("h3",{id:"counter-increment"},"Counter Increment"),(0,o.kt)("p",null,"You can increment the value of a counter using the counter-increment property. This is typically done when a specific element is encountered in the HTML. "),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"For example:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},'.counter-item::before {\n    counter-increment: myCounter;\n    content: "Counter Value: " counter(myCounter);\n}\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"In this example:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"each element with the class ",(0,o.kt)("inlineCode",{parentName:"li"},"counter-item")," will increment the ",(0,o.kt)("inlineCode",{parentName:"li"},"myCounter")," counter, and the counter value will be displayed before the content of the element.")),(0,o.kt)("h3",{id:"displaying-counter-values"},"Displaying Counter values"),(0,o.kt)("p",null," To display the value of a counter, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"counter()")," function within the content property. This function takes the name of the counter as an argument and inserts its current value."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"For example:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},'.counter-item::before {\n    counter-increment: myCounter;\n    content: "Counter Value: " counter(myCounter);\n}\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"In this example:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"each element with the class ",(0,o.kt)("inlineCode",{parentName:"li"},"counter-item")," will increment the ",(0,o.kt)("inlineCode",{parentName:"li"},"myCounter")," counter, and the counter value will be displayed before the content of the element.")),(0,o.kt)("h2",{id:"nesting-counters"},"Nesting Counters"),(0,o.kt)("p",null,"CSS counters can also be nested, allowing you to create numbered or labeled sub-lists within a larger list."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"As an example:")),(0,o.kt)(a.Z,{htmlCode:'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <style>\n      ol {\n        counter-reset: my-counter;\n        list-style-type: none;\n      }\n      li {\n        counter-increment: my-counter;\n      }\n      li::before {\n        content: counter(my-counter) ". ";\n      }\n      ol ol {\n        counter-reset: sub-counter;\n      }\n      ol ol li {\n        counter-increment: sub-counter;\n      }\n      ol ol li::before {\n        content: counter(my-counter) "." counter(sub-counter) " ";\n      }\n    </style>\n  </head>\n  <body>\n    <ol>\n      <li>\n        First item\n        <ol>\n          <li>Sub-item 1</li>\n          <li>Sub-item 2</li>\n        </ol>\n      </li>\n      <li>Second item</li>\n    </ol>\n  </body>\n</html>\n',elementId:"sku-example2",mdxType:"CustomEditorHTML"}),(0,o.kt)("h2",{id:"css-counter-properties"},"CSS Counter Properties"),(0,o.kt)("p",null,"Here's a list of the CSS counter properties:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Property"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"content"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Used with the ::before and ::after pseudo-elements, to insert generated content")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"counter-increment"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Increments one or more counter values")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"counter-reset"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Creates or resets one or more counters")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"counter()"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Returns the current value of the named counter")))))}p.isMDXComponent=!0},39005:(e,t,n)=>{n.d(t,{Z:()=>p});var r=n(67294),o=n(19604);const a="label_OGF5",l="container_vJjB",i="editorWindow_Gfn9",s="outputwindow_HHdh",c="button_jrAF";var u=n(9200),m=n(36136);const p=e=>{let{htmlCode:t,elementId:n}=e;const[p,d]=(0,r.useState)(t),{colorMode:S}=(0,u.I)();let k=null;function C(){console.log("elementId=",n),document.getElementById(n).innerHTML="",document.getElementById(n).appendChild(k),k.contentDocument.open(),k.contentDocument.write(p),k.contentDocument.close(),k.style.height=k.contentWindow.document.body.scrollHeight+50+"px"}return m.Z.canUseDOM&&(k=document.createElement("iframe"),k.style.width="100%",k.style.height="100%",k.style.background="#fff"),(0,r.useEffect)((()=>{m.Z.canUseDOM&&C()}),[""]),r.createElement("div",{className:l},r.createElement("h3",{className:a},"Editor"),r.createElement(o.ZP,{className:i,height:"40vh",defaultLanguage:"html",defaultValue:p,onChange:d,theme:"dark"===S?"vs-dark":"light",options:{readOnly:!1,minimap:{enabled:!1}}}),r.createElement("div",{className:c},r.createElement("button",{onClick:C,className:"button button--success"},"Run Example >>")),r.createElement("div",{className:s,id:n}))}}}]);