"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[98186],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>c});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),d=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=d(e.components);return i.createElement(s.Provider,{value:t},e.children)},h="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),h=d(n),u=a,c=h["".concat(s,".").concat(u)]||h[u]||m[u]||l;return n?i.createElement(c,r(r({ref:t},p),{},{components:n})):i.createElement(c,r({ref:t},p))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[h]="string"==typeof e?e:a,r[1]=o;for(var d=2;d<l;d++)r[d]=n[d];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},83116:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var i=n(87462),a=(n(67294),n(3905)),l=n(39005);const r={slug:"/css-height-width",id:"css-height-width",sidebar_label:"CSS Height/Width",title:"CSS Height And Width",description:"Learn CSS height and width to control element dimensions with precision and flexibility. Our in-depth tutorial covers all the essentials for beginners and professionals.",keywords:["CSS height","CSS width","Height and width properties in CSS","CSS percentage height","CSS percentage width","CSS pixel height","CSS pixel width","CSS max-height","CSS max-width","CSS min-height","CSS min-width","web design","CSC","interactive tutorial","CSS code","element dimensions","CSS sizing","CSS height and width units","web layout design"],image:"https://cscnotes.netlify.app/img/css-large.png"},o=void 0,s={unversionedId:"CSS Tutorial/CSS Height &Width/css-height-width",id:"CSS Tutorial/CSS Height &Width/css-height-width",title:"CSS Height And Width",description:"Learn CSS height and width to control element dimensions with precision and flexibility. Our in-depth tutorial covers all the essentials for beginners and professionals.",source:"@site/docs/tutorial-css/02-CSS Tutorial/22-CSS Height &Width/index.mdx",sourceDirName:"02-CSS Tutorial/22-CSS Height &Width",slug:"/css-height-width",permalink:"/css/css-height-width",draft:!1,tags:[],version:"current",frontMatter:{slug:"/css-height-width",id:"css-height-width",sidebar_label:"CSS Height/Width",title:"CSS Height And Width",description:"Learn CSS height and width to control element dimensions with precision and flexibility. Our in-depth tutorial covers all the essentials for beginners and professionals.",keywords:["CSS height","CSS width","Height and width properties in CSS","CSS percentage height","CSS percentage width","CSS pixel height","CSS pixel width","CSS max-height","CSS max-width","CSS min-height","CSS min-width","web design","CSC","interactive tutorial","CSS code","element dimensions","CSS sizing","CSS height and width units","web layout design"],image:"https://cscnotes.netlify.app/img/css-large.png"},sidebar:"ethernetip",previous:{title:"CSS Padding",permalink:"/css/css-padding"},next:{title:"CSS Outline",permalink:"/css/css-outline"}},d={},p=[{value:"CSS Height and Width Example",id:"css-height-and-width-example",level:2},{value:"CSS height and width Values",id:"css-height-and-width-values",level:2},{value:"Fixed Values",id:"fixed-values",level:3},{value:"Percentage Values",id:"percentage-values",level:3},{value:"Auto Value",id:"auto-value",level:3},{value:"Max and Min Values",id:"max-and-min-values",level:3},{value:"Content-Based Values",id:"content-based-values",level:3},{value:"Flexbox Values",id:"flexbox-values",level:3},{value:"Grid Values",id:"grid-values",level:3}],h={toc:p};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("head",null,(0,a.kt)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,a.kt)("meta",{name:"twitter:site",content:"@CSC"}),(0,a.kt)("meta",{name:"twitter:title",content:"CSS Height And Width"}),(0,a.kt)("meta",{name:"twitter:description",content:"Learn about CSS Height and Width using our interactive Code Editor."}),(0,a.kt)("meta",{name:"twitter:image",content:"https://cscnotes.netlify.app/img/css-large.png"}),(0,a.kt)("meta",{name:"twitter:image:alt",content:"CSS Tutorial Banner Image"}),(0,a.kt)("meta",{name:"og:type",content:"article"}),(0,a.kt)("meta",{name:"og:title",content:"CSS Height And Width"}),(0,a.kt)("meta",{name:"og:description",content:"Learn about CSS Height and Width using our interactive Code Editor."}),(0,a.kt)("meta",{name:"og:image",content:"https://cscnotes.netlify.app/img/css-large.png"}),(0,a.kt)("meta",{name:"og:image:alt",content:"CSS Tutorial Banner Image"}),(0,a.kt)("meta",{name:"og:site_name",content:"CSC"}),(0,a.kt)("meta",{name:"og:url",content:"https://cscnotes.netlify.app/css/css-height-width"}),(0,a.kt)("link",{rel:"canonical",href:"https://cscnotes.netlify.app/css/css-height-width"})),(0,a.kt)("p",null,"The CSS ",(0,a.kt)("inlineCode",{parentName:"p"},"height")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"width")," properties are ",(0,a.kt)("strong",{parentName:"p"},"used to define the height and width of an element"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Here are some things to keep in mind when using these properties:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"By default, the ",(0,a.kt)("inlineCode",{parentName:"li"},"height")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"width")," properties are set to ",(0,a.kt)("inlineCode",{parentName:"li"},"auto"),", which means that the element will be sized based on its content."),(0,a.kt)("li",{parentName:"ul"},"You can set the ",(0,a.kt)("inlineCode",{parentName:"li"},"height")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"width")," properties to specific pixel values, such as ",(0,a.kt)("inlineCode",{parentName:"li"},"height: 100px"),"; and ",(0,a.kt)("inlineCode",{parentName:"li"},"width: 200px"),";."),(0,a.kt)("li",{parentName:"ul"},"You can also use relative units, such as percentages, to define the height and width of an element. For example, ",(0,a.kt)("inlineCode",{parentName:"li"},"height: 50%"),"; would set the height of the element to be ",(0,a.kt)("inlineCode",{parentName:"li"},"50%")," of its containing block's height."),(0,a.kt)("li",{parentName:"ul"},"If you specify a value for only one of the ",(0,a.kt)("inlineCode",{parentName:"li"},"height")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"width")," properties, the other property will adjust automatically to maintain the element's aspect ratio. For example, if you set ",(0,a.kt)("inlineCode",{parentName:"li"},"width: 200px"),"; but don't specify a value for height, the ",(0,a.kt)("inlineCode",{parentName:"li"},"height")," of the element will adjust automatically to maintain the aspect ratio.")),(0,a.kt)("h2",{id:"css-height-and-width-example"},"CSS Height and Width Example"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"An example of how to use CSS height and width properties:")),(0,a.kt)(l.Z,{htmlCode:'<!DOCTYPE >\n<html>\n  <style>\n    .box {\n      height: 100px;\n      width: 200px;\n      background-color: blue;\n      color: white;\n    }\n  </style>\n  <body>\n    <div class="box">Hello World!</div>\n  </body>\n</html>\n',elementId:"sku-example1",mdxType:"CustomEditorHTML"}),(0,a.kt)("h2",{id:"css-height-and-width-values"},"CSS height and width Values"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"height")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"width")," properties can accept a variety of values to specify the size of an element."),(0,a.kt)("p",null," ",(0,a.kt)("strong",{parentName:"p"},"Here are some of the most common values you can use:")),(0,a.kt)("h3",{id:"fixed-values"},"Fixed Values"),(0,a.kt)("p",null,"Fixed values are specific pixel or unit values that set a fixed size for an element."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"As an example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},"height: 200px;\nwidth: 300px;\n")),(0,a.kt)("h3",{id:"percentage-values"},"Percentage Values"),(0,a.kt)("p",null,"Percentage values set the size of an element based on a percentage of its parent container."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"As an  example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},"height: 50%;\nwidth: 75%;\n")),(0,a.kt)("h3",{id:"auto-value"},"Auto Value"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"auto")," value sets the height or width of an element to be determined automatically based on its content or other factors."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"As an example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},"height: auto;\nwidth: auto;\n")),(0,a.kt)("h3",{id:"max-and-min-values"},"Max and Min Values"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"max-height"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"max-width"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"min-height"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"min-width")," properties allow you to set limits on the maximum and minimum size of an element."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"As an example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},"max-height: 500px;\nmin-width: 100px;\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Viewport Units")),(0,a.kt)("p",null,"Viewport units allow you to set the size of an element relative to the size of the browser window. The most commonly used viewport units are ",(0,a.kt)("inlineCode",{parentName:"p"},"vh")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"vw"),", which represent ",(0,a.kt)("inlineCode",{parentName:"p"},"1%")," of the viewport height and width, respectively."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"As an example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},"height: 50vh;\nwidth: 75vw;\n")),(0,a.kt)("h3",{id:"content-based-values"},"Content-Based Values"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"fit-content")," value sets the size of an element based on its content, while also accounting for any specified minimum and maximum sizes."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"As an example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},"height: fit-content;\nwidth: fit-content;\nmin-height: 100px;\nmax-width: 500px;\n")),(0,a.kt)("h3",{id:"flexbox-values"},"Flexbox Values"),(0,a.kt)("p",null,"If you're using flexbox layout in CSS, you can use the flex-basis property to set the initial size of a flex item. "),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"As an example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},"flex-basis: 200px;\n")),(0,a.kt)("h3",{id:"grid-values"},"Grid Values"),(0,a.kt)("p",null,"If you're using CSS grid layout, you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"grid-template-rows")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"grid-template-columns")," properties to define the rows and columns of your grid, and set their size using the same values as the ",(0,a.kt)("inlineCode",{parentName:"p"},"height")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"width")," properties."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"As an example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},"grid-template-rows: 100px 200px 50px;\ngrid-template-columns: 1fr 2fr 1fr;\n")))}m.isMDXComponent=!0},39005:(e,t,n)=>{n.d(t,{Z:()=>m});var i=n(67294),a=n(19604);const l="label_OGF5",r="container_vJjB",o="editorWindow_Gfn9",s="outputwindow_HHdh",d="button_jrAF";var p=n(9200),h=n(36136);const m=e=>{let{htmlCode:t,elementId:n}=e;const[m,u]=(0,i.useState)(t),{colorMode:c}=(0,p.I)();let g=null;function k(){console.log("elementId=",n),document.getElementById(n).innerHTML="",document.getElementById(n).appendChild(g),g.contentDocument.open(),g.contentDocument.write(m),g.contentDocument.close(),g.style.height=g.contentWindow.document.body.scrollHeight+50+"px"}return h.Z.canUseDOM&&(g=document.createElement("iframe"),g.style.width="100%",g.style.height="100%",g.style.background="#fff"),(0,i.useEffect)((()=>{h.Z.canUseDOM&&k()}),[""]),i.createElement("div",{className:r},i.createElement("h3",{className:l},"Editor"),i.createElement(a.ZP,{className:o,height:"40vh",defaultLanguage:"html",defaultValue:m,onChange:u,theme:"dark"===c?"vs-dark":"light",options:{readOnly:!1,minimap:{enabled:!1}}}),i.createElement("div",{className:d},i.createElement("button",{onClick:k,className:"button button--success"},"Run Example >>")),i.createElement("div",{className:s,id:n}))}}}]);